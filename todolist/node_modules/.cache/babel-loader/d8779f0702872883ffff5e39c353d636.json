{"ast":null,"code":"import _defineProperty from \"/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _ERRORS;\n\nimport { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent as _addComponent2, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent as _addOrOverwriteComponent2, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\n\nvar FirebaseAppImpl = /*#__PURE__*/function () {\n  function FirebaseAppImpl(_delegate, firebase) {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseAppImpl);\n\n    this._delegate = _delegate;\n    this.firebase = firebase; // add itself to container\n\n    _addComponent2(_delegate, new Component('app-compat', function () {\n      return _this;\n    }, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n\n    this.container = _delegate.container;\n  }\n\n  _createClass(FirebaseAppImpl, [{\n    key: \"automaticDataCollectionEnabled\",\n    get: function get() {\n      return this._delegate.automaticDataCollectionEnabled;\n    },\n    set: function set(val) {\n      this._delegate.automaticDataCollectionEnabled = val;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._delegate.name;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._delegate.options;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2._delegate.checkDestroyed();\n\n        resolve();\n      }).then(function () {\n        _this2.firebase.INTERNAL.removeApp(_this2.name);\n\n        return deleteApp(_this2._delegate);\n      });\n    }\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"_getService\",\n    value: function _getService(name) {\n      var instanceIdentifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DEFAULT_ENTRY_NAME;\n\n      var _a;\n\n      this._delegate.checkDestroyed(); // Initialize instance if InstatiationMode is `EXPLICIT`.\n\n\n      var provider = this._delegate.container.getProvider(name);\n\n      if (!provider.isInitialized() && ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\"\n      /* EXPLICIT */\n      ) {\n        provider.initialize();\n      } // getImmediate will always succeed because _getService is only called for registered components.\n\n\n      return provider.getImmediate({\n        identifier: instanceIdentifier\n      });\n    }\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"_removeServiceInstance\",\n    value: function _removeServiceInstance(name) {\n      var instanceIdentifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DEFAULT_ENTRY_NAME;\n\n      this._delegate.container // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name).clearInstance(instanceIdentifier);\n    }\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"_addComponent\",\n    value: function _addComponent(component) {\n      _addComponent2(this._delegate, component);\n    }\n  }, {\n    key: \"_addOrOverwriteComponent\",\n    value: function _addOrOverwriteComponent(component) {\n      _addOrOverwriteComponent2(this._delegate, component);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        name: this.name,\n        automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n        options: this.options\n      };\n    }\n  }]);\n\n  return FirebaseAppImpl;\n}(); // TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERRORS = (_ERRORS = {}, _defineProperty(_ERRORS, \"no-app\"\n/* NO_APP */\n, \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()'), _defineProperty(_ERRORS, \"invalid-app-argument\"\n/* INVALID_APP_ARGUMENT */\n, 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), _ERRORS);\nvar ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\n\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\n  var apps = {}; // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n  // A namespace is a plain JavaScript Object.\n\n  var namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app: app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp: removeApp,\n      useAsService: useAsService,\n      modularAPIs: modularAPIs\n    }\n  }; // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  namespace['default'] = namespace; // firebase.apps is a read-only getter.\n\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n  /**\r\n   * Called by App.delete() - but before any services associated with the App\r\n   * are deleted.\r\n   */\n\n  function removeApp(name) {\n    delete apps[name];\n  }\n  /**\r\n   * Get the App object for a given name (or DEFAULT).\r\n   */\n\n\n  function app(name) {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(\"no-app\"\n      /* NO_APP */\n      , {\n        appName: name\n      });\n    }\n\n    return apps[name];\n  } // @ts-ignore\n\n\n  app['App'] = firebaseAppImpl;\n  /**\r\n   * Create a new App instance (name must be unique).\r\n   *\r\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n   */\n\n  function initializeAppCompat(options) {\n    var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var app = modularAPIs.initializeApp(options, rawConfig);\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    var appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n  /*\r\n   * Return an array of all the non-deleted FirebaseApps.\r\n   */\n\n\n  function getApps() {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(function (name) {\n      return apps[name];\n    });\n  }\n\n  function registerComponentCompat(component) {\n    var componentName = component.name;\n    var componentNameWithoutCompat = componentName.replace('-compat', '');\n\n    if (modularAPIs._registerComponent(component) && component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      var serviceNamespace = function serviceNamespace() {\n        var appArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : app();\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof appArg[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(\"invalid-app-argument\"\n          /* INVALID_APP_ARGUMENT */\n          , {\n            appName: componentName\n          });\n        } // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        return appArg[componentNameWithoutCompat]();\n      }; // ... and a container for service-level properties.\n\n\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      namespace[componentNameWithoutCompat] = serviceNamespace; // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      firebaseAppImpl.prototype[componentNameWithoutCompat] = // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n      // option added to the no-explicit-any rule when ESlint releases it.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function () {\n        var serviceFxn = this._getService.bind(this, componentName);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return serviceFxn.apply(this, component.multipleInstances ? args : []);\n      };\n    }\n\n    return component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    namespace[componentNameWithoutCompat] : null;\n  } // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n\n\n  function useAsService(app, name) {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    var useService = name;\n    return useService;\n  }\n\n  return namespace;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\n\n\nfunction createFirebaseNamespace() {\n  var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), {\n    createFirebaseNamespace: createFirebaseNamespace,\n    extendNamespace: extendNamespace,\n    createSubscribe: createSubscribe,\n    ErrorFactory: ErrorFactory,\n    deepExtend: deepExtend\n  });\n  /**\r\n   * Patch the top-level firebase namespace with additional properties.\r\n   *\r\n   * firebase.INTERNAL.extendNamespace()\r\n   */\n\n  function extendNamespace(props) {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nvar firebase$1 = createFirebaseNamespace();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logger = new Logger('@firebase/app-compat');\nvar name = \"@firebase/app-compat\";\nvar version = \"0.1.26\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerCoreComponents(variant) {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nif (isBrowser() && self.firebase !== undefined) {\n  logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \"); // eslint-disable-next-line\n\n  var sdkVersion = self.firebase.SDK_VERSION;\n\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");\n  }\n}\n\nvar firebase = firebase$1;\nregisterCoreComponents();\nexport { firebase as default };","map":{"version":3,"mappings":"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","names":["FirebaseAppImpl","_delegate","firebase","_addComponent","Component","container","automaticDataCollectionEnabled","val","name","options","Promise","checkDestroyed","resolve","then","INTERNAL","removeApp","deleteApp","instanceIdentifier","_DEFAULT_ENTRY_NAME","provider","getProvider","isInitialized","getComponent","_a","initialize","getImmediate","identifier","clearInstance","component","_addOrOverwriteComponent","ERRORS","ERROR_FACTORY","ErrorFactory","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","initializeAppCompat","app","registerVersion","modularAPIs","setLogLevel","onLog","SDK_VERSION","registerComponent","registerComponentCompat","useAsService","Object","defineProperty","get","getApps","contains","create","appName","rawConfig","appCompat","keys","map","componentName","componentNameWithoutCompat","replace","_registerComponent","type","serviceNamespace","appArg","serviceProps","undefined","deepExtend","prototype","serviceFxn","_getService","bind","args","apply","multipleInstances","useService","createFirebaseNamespace","extendNamespace","createSubscribe","props","logger","Logger","registerCoreComponents","variant","version","isBrowser","self","warn","sdkVersion","indexOf","firebaseNamespace"],"sources":["/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/firebaseApp.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/errors.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/firebaseNamespaceCore.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/firebaseNamespace.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/logger.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/registerCoreComponents.ts","/home/fullzer4/Documents/GitHub/ToDoList/todolist/node_modules/@firebase/app-compat/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n"]},"metadata":{},"sourceType":"module"}