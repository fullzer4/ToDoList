{"ast":null,"code":"var _jsxFileName = \"/home/fullzer4/Documents/GitHub/ToDoList/src/routes/Route.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../contexts/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouteWrapper(_ref) {\n  _s();\n\n  let {\n    component: Component,\n    isPrivate,\n    ...rest\n  } = _ref;\n  const {\n    signed,\n    loading\n  } = useContext(AuthContext);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RouteWrapper, \"A92BMB7Wppcexey1PGlFFsSylqE=\");\n\n_c = RouteWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWrapper\");","map":{"version":3,"names":["useContext","Route","Redirect","AuthContext","RouteWrapper","component","Component","isPrivate","rest","signed","loading","props"],"sources":["/home/fullzer4/Documents/GitHub/ToDoList/src/routes/Route.js"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/auth';\r\n\r\nexport default function RouteWrapper({\r\n  component: Component,\r\n  isPrivate,\r\n  ...rest\r\n}){\r\n  const {signed, loading} = useContext(AuthContext)\r\n\r\n  if(loading){\r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n\r\n  if(!signed && isPrivate){\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  if(signed && !isPrivate){\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n\r\n  return(\r\n    <Route\r\n      {...rest}\r\n      render={ props => (\r\n        <Component {...props} />\r\n      )}\r\n    />\r\n  )\r\n}"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,YAAT,OAIb;EAAA;;EAAA,IAJmC;IACnCC,SAAS,EAAEC,SADwB;IAEnCC,SAFmC;IAGnC,GAAGC;EAHgC,CAInC;EACA,MAAM;IAACC,MAAD;IAASC;EAAT,IAAoBV,UAAU,CAACG,WAAD,CAApC;;EAEA,IAAGO,OAAH,EAAW;IACT,oBACE;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;EAED,IAAG,CAACD,MAAD,IAAWF,SAAd,EAAwB;IACtB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAGE,MAAM,IAAI,CAACF,SAAd,EAAwB;IACtB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAGD,oBACE,QAAC,KAAD,OACMC,IADN;IAEE,MAAM,EAAGG,KAAK,iBACZ,QAAC,SAAD,OAAeA;IAAf;MAAA;MAAA;MAAA;IAAA;EAHJ;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA9BuBP,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}