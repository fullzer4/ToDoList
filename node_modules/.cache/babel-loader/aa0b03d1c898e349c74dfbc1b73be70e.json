{"ast":null,"code":"import _toArray from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _regeneratorRuntime from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ap as _isIOS7Or8, aq as debugAssert, ar as _isIOS, as as _isAndroid, at as _fail, au as _getRedirectUrl, av as _getProjectConfig, aw as _createError, ax as _assert, ay as _getInstance, b as browserLocalPersistence, az as _persistenceKeyName, aA as AuthEventManager, a as browserSessionPersistence, aB as _getRedirectResult, aC as _overrideRedirectResult, aD as _clearRedirectOutcomes, aE as _castAuth } from './index-ccf9d100.js';\nexport { A as ActionCodeOperation, ad as ActionCodeURL, H as AuthCredential, D as AuthErrorCodes, aG as AuthImpl, aJ as AuthPopup, I as EmailAuthCredential, M as EmailAuthProvider, N as FacebookAuthProvider, F as FactorId, aK as FetchProvider, T as GithubAuthProvider, Q as GoogleAuthProvider, J as OAuthCredential, U as OAuthProvider, O as OperationType, K as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aL as SAMLAuthCredential, V as SAMLAuthProvider, S as SignInMethod, W as TwitterAuthProvider, aF as UserImpl, ax as _assert, aE as _castAuth, at as _fail, aI as _generateEventId, aH as _getClientVersion, ay as _getInstance, aB as _getRedirectResult, aC as _overrideRedirectResult, az as _persistenceKeyName, a2 as applyActionCode, t as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a3 as checkActionCode, a1 as confirmPasswordReset, G as connectAuthEmulator, a5 as createUserWithEmailAndPassword, B as debugErrorMap, z as deleteUser, aa as fetchSignInMethodsForEmail, al as getAdditionalUserInfo, n as getAuth, ai as getIdToken, aj as getIdTokenResult, an as getMultiFactorResolver, j as getRedirectResult, L as inMemoryPersistence, i as indexedDBLocalPersistence, E as initializeAuth, a8 as isSignInWithEmailLink, Z as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ao as multiFactor, v as onAuthStateChanged, q as onIdTokenChanged, ae as parseActionCodeURL, C as prodErrorMap, _ as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, am as reload, ab as sendEmailVerification, a0 as sendPasswordResetEmail, a7 as sendSignInLinkToEmail, p as setPersistence, X as signInAnonymously, Y as signInWithCredential, $ as signInWithCustomToken, a6 as signInWithEmailAndPassword, a9 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, y as signOut, ak as unlink, x as updateCurrentUser, ag as updateEmail, ah as updatePassword, u as updatePhoneNumber, af as updateProfile, w as useDeviceLanguage, ac as verifyBeforeUpdateEmail, a4 as verifyPasswordResetCode } from './index-ccf9d100.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction _cordovaWindow() {\n  return window;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\n\n\nvar REDIRECT_TIMEOUT_MS = 2000;\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\n\nfunction _generateHandlerUrl(_x, _x2, _x3) {\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\n\n\nfunction _generateHandlerUrl2() {\n  _generateHandlerUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(auth, event, provider) {\n    var _a, _cordovaWindow4, BuildInfo, sessionDigest, additionalParams;\n\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            // Get the cordova plugins\n            _cordovaWindow4 = _cordovaWindow(), BuildInfo = _cordovaWindow4.BuildInfo;\n            debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n            _context7.next = 4;\n            return computeSha256(event.sessionId);\n\n          case 4:\n            sessionDigest = _context7.sent;\n            additionalParams = {};\n\n            if (_isIOS()) {\n              // iOS app identifier\n              additionalParams['ibi'] = BuildInfo.packageName;\n            } else if (_isAndroid()) {\n              // Android app identifier\n              additionalParams['apn'] = BuildInfo.packageName;\n            } else {\n              _fail(auth, \"operation-not-supported-in-this-environment\"\n              /* OPERATION_NOT_SUPPORTED */\n              );\n            } // Add the display name if available\n\n\n            if (BuildInfo.displayName) {\n              additionalParams['appDisplayName'] = BuildInfo.displayName;\n            } // Attached the hashed session ID\n\n\n            additionalParams['sessionId'] = sessionDigest;\n            return _context7.abrupt(\"return\", _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams));\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n\nfunction _validateOrigin(_x4) {\n  return _validateOrigin2.apply(this, arguments);\n}\n\nfunction _validateOrigin2() {\n  _validateOrigin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(auth) {\n    var _cordovaWindow5, BuildInfo, request;\n\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _cordovaWindow5 = _cordovaWindow(), BuildInfo = _cordovaWindow5.BuildInfo;\n            request = {};\n\n            if (_isIOS()) {\n              request.iosBundleId = BuildInfo.packageName;\n            } else if (_isAndroid()) {\n              request.androidPackageName = BuildInfo.packageName;\n            } else {\n              _fail(auth, \"operation-not-supported-in-this-environment\"\n              /* OPERATION_NOT_SUPPORTED */\n              );\n            } // Will fail automatically if package name is not authorized\n\n\n            _context8.next = 5;\n            return _getProjectConfig(auth, request);\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _validateOrigin2.apply(this, arguments);\n}\n\nfunction _performRedirect(handlerUrl) {\n  // Get the cordova plugins\n  var _cordovaWindow2 = _cordovaWindow(),\n      cordova = _cordovaWindow2.cordova;\n\n  return new Promise(function (resolve) {\n    cordova.plugins.browsertab.isAvailable(function (browserTabIsAvailable) {\n      var iabRef = null;\n\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\n      }\n\n      resolve(iabRef);\n    });\n  });\n}\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\n\n\nfunction _waitForAppResume(_x5, _x6, _x7) {\n  return _waitForAppResume2.apply(this, arguments);\n}\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\n\n\nfunction _waitForAppResume2() {\n  _waitForAppResume2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(auth, eventListener, iabRef) {\n    var _cordovaWindow6, cordova, cleanup;\n\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            // Get the cordova plugins\n            _cordovaWindow6 = _cordovaWindow(), cordova = _cordovaWindow6.cordova;\n\n            cleanup = function cleanup() {};\n\n            _context9.prev = 2;\n            _context9.next = 5;\n            return new Promise(function (resolve, reject) {\n              var onCloseTimer = null; // DEFINE ALL THE CALLBACKS =====\n\n              function authEventSeen() {\n                var _a; // Auth event was detected. Resolve this promise and close the extra\n                // window if it's still open.\n\n\n                resolve();\n                var closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\n\n                if (typeof closeBrowserTab === 'function') {\n                  closeBrowserTab();\n                } // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n                // open.\n\n\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\n                  iabRef.close();\n                }\n              }\n\n              function resumed() {\n                if (onCloseTimer) {\n                  // This code already ran; do not rerun.\n                  return;\n                }\n\n                onCloseTimer = window.setTimeout(function () {\n                  // Wait two seeconds after resume then reject.\n                  reject(_createError(auth, \"redirect-cancelled-by-user\"\n                  /* REDIRECT_CANCELLED_BY_USER */\n                  ));\n                }, REDIRECT_TIMEOUT_MS);\n              }\n\n              function visibilityChanged() {\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\n                  resumed();\n                }\n              } // ATTACH ALL THE LISTENERS =====\n              // Listen for the auth event\n\n\n              eventListener.addPassiveListener(authEventSeen); // Listen for resume and visibility events\n\n              document.addEventListener('resume', resumed, false);\n\n              if (_isAndroid()) {\n                document.addEventListener('visibilitychange', visibilityChanged, false);\n              } // SETUP THE CLEANUP FUNCTION =====\n\n\n              cleanup = function cleanup() {\n                eventListener.removePassiveListener(authEventSeen);\n                document.removeEventListener('resume', resumed, false);\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\n\n                if (onCloseTimer) {\n                  window.clearTimeout(onCloseTimer);\n                }\n              };\n            });\n\n          case 5:\n            _context9.prev = 5;\n            cleanup();\n            return _context9.finish(5);\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[2,, 5, 8]]);\n  }));\n  return _waitForAppResume2.apply(this, arguments);\n}\n\nfunction _checkCordovaConfiguration(auth) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n  var win = _cordovaWindow(); // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n\n\n  _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-universal-links-plugin-fix'\n  }); // https://www.npmjs.com/package/cordova-plugin-buildinfo\n\n\n  _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-buildInfo'\n  }); // https://github.com/google/cordova-plugin-browsertab\n\n\n  _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n\n  _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-browsertab'\n  }); // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n\n\n  _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\"\n  /* INVALID_CORDOVA_CONFIGURATION */\n  , {\n    missingPlugin: 'cordova-plugin-inappbrowser'\n  });\n}\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\n\n\nfunction computeSha256(_x8) {\n  return _computeSha.apply(this, arguments);\n}\n\nfunction _computeSha() {\n  _computeSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(sessionId) {\n    var bytes, buf, arr;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            bytes = stringToArrayBuffer(sessionId); // TODO: For IE11 crypto has a different name and this operation comes back\n            //       as an object, not a promise. This is the old proposed standard that\n            //       is used by IE11:\n            // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n\n            _context10.next = 3;\n            return crypto.subtle.digest('SHA-256', bytes);\n\n          case 3:\n            buf = _context10.sent;\n            arr = Array.from(new Uint8Array(buf));\n            return _context10.abrupt(\"return\", arr.map(function (num) {\n              return num.toString(16).padStart(2, '0');\n            }).join(''));\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _computeSha.apply(this, arguments);\n}\n\nfunction stringToArrayBuffer(str) {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\n\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  var buff = new ArrayBuffer(str.length);\n  var view = new Uint8Array(buff);\n\n  for (var i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n\n  return view;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SESSION_ID_LENGTH = 20;\n/** Custom AuthEventManager that adds passive listeners to events */\n\nvar CordovaAuthEventManager = /*#__PURE__*/function (_AuthEventManager) {\n  _inherits(CordovaAuthEventManager, _AuthEventManager);\n\n  var _super = _createSuper(CordovaAuthEventManager);\n\n  function CordovaAuthEventManager() {\n    var _this;\n\n    _classCallCheck(this, CordovaAuthEventManager);\n\n    _this = _super.apply(this, arguments);\n    _this.passiveListeners = new Set();\n    _this.initPromise = new Promise(function (resolve) {\n      _this.resolveInialized = resolve;\n    });\n    return _this;\n  }\n\n  _createClass(CordovaAuthEventManager, [{\n    key: \"addPassiveListener\",\n    value: function addPassiveListener(cb) {\n      this.passiveListeners.add(cb);\n    }\n  }, {\n    key: \"removePassiveListener\",\n    value: function removePassiveListener(cb) {\n      this.passiveListeners.delete(cb);\n    } // In a Cordova environment, this manager can live through multiple redirect\n    // operations\n\n  }, {\n    key: \"resetRedirect\",\n    value: function resetRedirect() {\n      this.queuedRedirectEvent = null;\n      this.hasHandledPotentialRedirect = false;\n    }\n    /** Override the onEvent method */\n\n  }, {\n    key: \"onEvent\",\n    value: function onEvent(event) {\n      this.resolveInialized();\n      this.passiveListeners.forEach(function (cb) {\n        return cb(event);\n      });\n      return _get(_getPrototypeOf(CordovaAuthEventManager.prototype), \"onEvent\", this).call(this, event);\n    }\n  }, {\n    key: \"initialized\",\n    value: function () {\n      var _initialized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initPromise;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initialized() {\n        return _initialized.apply(this, arguments);\n      }\n\n      return initialized;\n    }()\n  }]);\n\n  return CordovaAuthEventManager;\n}(AuthEventManager);\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\n\n\nfunction _generateNewEvent(auth, type) {\n  var eventId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return {\n    type: type,\n    eventId: eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, \"no-auth-event\"\n    /* NO_AUTH_EVENT */\n    )\n  };\n}\n\nfunction _savePartialEvent(auth, event) {\n  return storage()._set(persistenceKey(auth), event);\n}\n\nfunction _getAndRemoveEvent(_x9) {\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\n\nfunction _getAndRemoveEvent2() {\n  _getAndRemoveEvent2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(auth) {\n    var event;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return storage()._get(persistenceKey(auth));\n\n          case 2:\n            event = _context11.sent;\n\n            if (!event) {\n              _context11.next = 6;\n              break;\n            }\n\n            _context11.next = 6;\n            return storage()._remove(persistenceKey(auth));\n\n          case 6:\n            return _context11.abrupt(\"return\", event);\n\n          case 7:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\n\nfunction _eventFromPartialAndUrl(partialEvent, url) {\n  var _a, _b; // Parse the deep link within the dynamic link URL.\n\n\n  var callbackUrl = _getDeepLinkFromCallback(url); // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n\n\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    var params = searchParamsOrEmpty(callbackUrl); // Get the error object corresponding to the stringified error if found.\n\n    var errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;\n    var code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\n    var error = code ? _createError(code) : null;\n\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error: error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId() {\n  var chars = [];\n  var allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  for (var i = 0; i < SESSION_ID_LENGTH; i++) {\n    var idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n\n  return chars.join('');\n}\n\nfunction storage() {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth) {\n  return _persistenceKeyName(\"authEvent\"\n  /* AUTH_EVENT */\n  , auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n} // Exported for testing\n\n\nfunction _getDeepLinkFromCallback(url) {\n  var params = searchParamsOrEmpty(url);\n  var link = params['link'] ? decodeURIComponent(params['link']) : undefined; // Double link case (automatic redirect)\n\n  var doubleDeepLink = searchParamsOrEmpty(link)['link']; // iOS custom scheme links.\n\n  var iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;\n  var iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\n\n\nfunction searchParamsOrEmpty(url) {\n  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\n    return {};\n  }\n\n  var _url$split = url.split('?'),\n      _url$split2 = _toArray(_url$split),\n      _ = _url$split2[0],\n      rest = _url$split2.slice(1);\n\n  return querystringDecode(rest.join('?'));\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\n\n\nvar INITIAL_EVENT_TIMEOUT_MS = 500;\n\nvar CordovaPopupRedirectResolver = /*#__PURE__*/function () {\n  function CordovaPopupRedirectResolver() {\n    _classCallCheck(this, CordovaPopupRedirectResolver);\n\n    this._redirectPersistence = browserSessionPersistence;\n    this._shouldInitProactively = true; // This is lightweight for Cordova\n\n    this.eventManagers = new Map();\n    this.originValidationPromises = {};\n    this._completeRedirectFn = _getRedirectResult;\n    this._overrideRedirectResult = _overrideRedirectResult;\n  }\n\n  _createClass(CordovaPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth) {\n        var key, manager;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                key = auth._key();\n                manager = this.eventManagers.get(key);\n\n                if (!manager) {\n                  manager = new CordovaAuthEventManager(auth);\n                  this.eventManagers.set(key, manager);\n                  this.attachCallbackListeners(auth, manager);\n                }\n\n                return _context2.abrupt(\"return\", manager);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _initialize(_x10) {\n        return _initialize2.apply(this, arguments);\n      }\n\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup(auth) {\n      _fail(auth, \"operation-not-supported-in-this-environment\"\n      /* OPERATION_NOT_SUPPORTED */\n      );\n    }\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(auth, provider, authType, eventId) {\n        var manager, event, url, iabRef;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _checkCordovaConfiguration(auth);\n\n                _context3.next = 3;\n                return this._initialize(auth);\n\n              case 3:\n                manager = _context3.sent;\n                _context3.next = 6;\n                return manager.initialized();\n\n              case 6:\n                // Reset the persisted redirect states. This does not matter on Web where\n                // the redirect always blows away application state entirely. On Cordova,\n                // the app maintains control flow through the redirect.\n                manager.resetRedirect();\n\n                _clearRedirectOutcomes();\n\n                _context3.next = 10;\n                return this._originValidation(auth);\n\n              case 10:\n                event = _generateNewEvent(auth, authType, eventId);\n                _context3.next = 13;\n                return _savePartialEvent(auth, event);\n\n              case 13:\n                _context3.next = 15;\n                return _generateHandlerUrl(auth, event, provider);\n\n              case 15:\n                url = _context3.sent;\n                _context3.next = 18;\n                return _performRedirect(url);\n\n              case 18:\n                iabRef = _context3.sent;\n                return _context3.abrupt(\"return\", _waitForAppResume(auth, manager, iabRef));\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _openRedirect(_x11, _x12, _x13, _x14) {\n        return _openRedirect2.apply(this, arguments);\n      }\n\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(_auth, _cb) {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      var key = auth._key();\n\n      if (!this.originValidationPromises[key]) {\n        this.originValidationPromises[key] = _validateOrigin(auth);\n      }\n\n      return this.originValidationPromises[key];\n    }\n  }, {\n    key: \"attachCallbackListeners\",\n    value: function attachCallbackListeners(auth, manager) {\n      // Get the global plugins\n      var _cordovaWindow3 = _cordovaWindow(),\n          universalLinks = _cordovaWindow3.universalLinks,\n          handleOpenURL = _cordovaWindow3.handleOpenURL,\n          BuildInfo = _cordovaWindow3.BuildInfo;\n\n      var noEventTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _getAndRemoveEvent(auth);\n\n              case 2:\n                manager.onEvent(generateNoEvent());\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })), INITIAL_EVENT_TIMEOUT_MS);\n\n      var universalLinksCb = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(eventData) {\n          var partialEvent, finalEvent;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  // We have an event so we can clear the no event timeout\n                  clearTimeout(noEventTimeout);\n                  _context5.next = 3;\n                  return _getAndRemoveEvent(auth);\n\n                case 3:\n                  partialEvent = _context5.sent;\n                  finalEvent = null;\n\n                  if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\n                    finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n                  } // If finalEvent is never filled, trigger with no event\n\n\n                  manager.onEvent(finalEvent || generateNoEvent());\n\n                case 7:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function universalLinksCb(_x15) {\n          return _ref2.apply(this, arguments);\n        };\n      }(); // Universal links subscriber doesn't exist for iOS, so we need to check\n\n\n      if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {\n        universalLinks.subscribe(null, universalLinksCb);\n      } // iOS 7 or 8 custom URL schemes.\n      // This is also the current default behavior for iOS 9+.\n      // For this to work, cordova-plugin-customurlscheme needs to be installed.\n      // https://github.com/EddyVerbruggen/Custom-URL-scheme\n      // Do not overwrite the existing developer's URL handler.\n\n\n      var existingHandleOpenURL = handleOpenURL;\n      var packagePrefix = \"\".concat(BuildInfo.packageName.toLowerCase(), \"://\");\n\n      _cordovaWindow().handleOpenURL = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(url) {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (url.toLowerCase().startsWith(packagePrefix)) {\n                    // We want this intentionally to float\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    universalLinksCb({\n                      url: url\n                    });\n                  } // Call the developer's handler if it is present.\n\n\n                  if (typeof existingHandleOpenURL === 'function') {\n                    try {\n                      existingHandleOpenURL(url);\n                    } catch (e) {\n                      // This is a developer error. Don't stop the flow of the SDK.\n                      console.error(e);\n                    }\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x16) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    }\n  }]);\n\n  return CordovaPopupRedirectResolver;\n}();\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\n\n\nvar cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\n\nfunction generateNoEvent() {\n  return {\n    type: \"unknown\"\n    /* UNKNOWN */\n    ,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(\"no-auth-event\"\n    /* NO_AUTH_EVENT */\n    )\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\n\n\nfunction addFrameworkForLogging(auth, framework) {\n  _castAuth(auth)._logFramework(framework);\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;;SAoCaA,iBAAc;EAC5B,OAAQC,MAAR;AACF;ACrDA;;;;;;;;;;;;;;;AAeG;;AAoBH;;;AAGG;;;AACH,IAAMC,mBAAmB,GAAG,IAA5B;AAEA;;AAEG;;SACmBC,mB;;;AAsCtB;;AAEG;;;;oFAxCI,kBACLC,IADK,EAELC,KAFK,EAGLC,QAHK;IAAA;;IAAA;MAAA;QAAA;UAAA;;YAAA,kBAMiBN,cAAc,EAN/B,EAMGO,SANH,mBAMGA,SANH;YAOLC,WAAW,CAACH,KAAK,CAACI,SAAP,EAAkB,wCAAlB,CAAX;YAPK;YAAA,OAQuBC,aAAa,CAACL,KAAK,CAACI,SAAP,CARpC;;UAAA;YAQCE,aARD;YAUCC,gBAVD,GAU4C,EAV5C;;YAWL,IAAIC,MAAM,EAAV,EAAc;;cAEZD,gBAAgB,CAAC,KAAD,CAAhB,GAA0BL,SAAS,CAACO,WAApC;YACD,CAHD,MAGO,IAAIC,UAAU,EAAd,EAAkB;;cAEvBH,gBAAgB,CAAC,KAAD,CAAhB,GAA0BL,SAAS,CAACO,WAApC;YACD,CAHM,MAGA;cACLE,KAAK,CAACZ,IAAD,EAAK;cAAA;cAAL,CAAL;YACD,CAnBI;;;YAsBL,IAAIG,SAAS,CAACU,WAAd,EAA2B;cACzBL,gBAAgB,CAAC,gBAAD,CAAhB,GAAqCL,SAAS,CAACU,WAA/C;YACD,CAxBI;;;YA2BLL,gBAAgB,CAAC,WAAD,CAAhB,GAAgCD,aAAhC;YA3BK,kCA4BEO,eAAe,CACpBd,IADoB,EAEpBE,QAFoB,EAGpBD,KAAK,CAACc,IAHc,EAIpBC,SAJoB,EAKpB,WAAK,CAACC,OAAN,MAAa,IAAb,IAAaC,aAAb,GAAaA,EAAb,GAAiBF,SALG,EAMpBR,gBANoB,CA5BjB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;SAyCeW,e;;;;;gFAAf,kBAA+BnB,IAA/B;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,kBACiBJ,cAAc,EAD/B,EACGO,SADH,mBACGA,SADH;YAECiB,OAFD,GAEoC,EAFpC;;YAGL,IAAIX,MAAM,EAAV,EAAc;cACZW,OAAO,CAACC,WAAR,GAAsBlB,SAAS,CAACO,WAAhC;YACD,CAFD,MAEO,IAAIC,UAAU,EAAd,EAAkB;cACvBS,OAAO,CAACE,kBAAR,GAA6BnB,SAAS,CAACO,WAAvC;YACD,CAFM,MAEA;cACLE,KAAK,CAACZ,IAAD,EAAK;cAAA;cAAL,CAAL;YACD,CATI;;;YAAA;YAAA,OAYCuB,iBAAiB,CAACvB,IAAD,EAAOoB,OAAP,CAZlB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAeD,SAAUI,gBAAV,CACJC,UADI,EACc;;EAGlB,sBAAoB7B,cAAc,EAAlC;EAAA,IAAQ8B,OAAR,mBAAQA,OAAR;;EAEA,OAAO,IAAIC,OAAJ,CAAY,iBAAO,EAAG;IAC3BD,OAAO,CAACE,OAAR,CAAgBC,UAAhB,CAA2BC,WAA3B,CAAuC,+BAAqB,EAAG;MAC7D,IAAIC,MAAM,GAA2B,IAArC;;MACA,IAAIC,qBAAJ,EAA2B;QACzBN,OAAO,CAACE,OAAR,CAAgBC,UAAhB,CAA2BI,OAA3B,CAAmCR,UAAnC;MACD,CAFD,MAEO;;QAELM,MAAM,GAAGL,OAAO,CAACQ,YAAR,CAAqBC,IAArB,CACPV,UADO,EAEPW,UAAU,KAAK,QAAL,GAAgB,SAFnB,EAGP,cAHO,CAAT;MAKD;;MACDC,OAAO,CAACN,MAAD,CAAP;IACD,CAbD;EAcD,CAfM,CAAP;AAgBD;AAQD;;;;;AAKG;;;SACmBO,iB;;;AA4EtB;;;;AAIG;;;;kFAhFI,kBACLtC,IADK,EAELuC,aAFK,EAGLR,MAHK;IAAA;;IAAA;MAAA;QAAA;UAAA;;YAAA,kBAMenC,cAAc,EAN7B,EAMG8B,OANH,mBAMGA,OANH;;YAQDc,OARC,GAQS,mBAAW,CAAG,CARvB;;YAAA;YAAA;YAAA,OAUG,IAAIb,OAAJ,CAAkB,UAACU,OAAD,EAAUI,MAAV,EAAoB;cAC1C,IAAIC,YAAY,GAAkB,IAAlC,CAD0C;;cAI1C,SAASC,aAAT,GAAsB;uBAAA;;;;gBAGpBN,OAAO;gBACP,IAAMO,eAAe,GAAG,aAAO,CAAChB,OAAR,CAAgBC,UAAhB,MAA4B,IAA5B,IAA4BX,aAA5B,GAA4B,MAA5B,GAA4BA,QAApD;;gBACA,IAAI,OAAO0B,eAAP,KAA2B,UAA/B,EAA2C;kBACzCA,eAAe;gBAChB,CAPmB;;;;gBAUpB,IAAI,QAAOb,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEc,KAAf,MAAyB,UAA7B,EAAyC;kBACvCd,MAAM,CAACc,KAAP;gBACD;cACF;;cAED,SAASC,OAAT,GAAgB;gBACd,IAAIJ,YAAJ,EAAkB;;kBAEhB;gBACD;;gBAEDA,YAAY,GAAG7C,MAAM,CAACkD,UAAP,CAAkB,YAAK;;kBAEpCN,MAAM,CAACO,YAAY,CAAChD,IAAD,EAAK;kBAAA;kBAAL,CAAb,CAAN;gBACD,CAHc,EAGZF,mBAHY,CAAf;cAID;;cAED,SAASmD,iBAAT,GAA0B;gBACxB,IAAI,SAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEC,eAAV,MAA8B,SAAlC,EAA6C;kBAC3CJ,OAAO;gBACR;cACF,CAnCyC;;;;cAuC1CP,aAAa,CAACY,kBAAd,CAAiCR,aAAjC,EAvC0C;;cA0C1CS,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCP,OAApC,EAA6C,KAA7C;;cACA,IAAInC,UAAU,EAAd,EAAkB;gBAChByC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8CJ,iBAA9C,EAAiE,KAAjE;cACD,CA7CyC;;;cAgD1CT,OAAO,GAAG,mBAAK;gBACbD,aAAa,CAACe,qBAAd,CAAoCX,aAApC;gBACAS,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuCT,OAAvC,EAAgD,KAAhD;gBACAM,QAAQ,CAACG,mBAAT,CACE,kBADF,EAEEN,iBAFF,EAGE,KAHF;;gBAKA,IAAIP,YAAJ,EAAkB;kBAChB7C,MAAM,CAAC2D,YAAP,CAAoBd,YAApB;gBACD;cACF,CAXD;YAYD,CA5DK,CAVH;;UAAA;YAAA;YAwEHF,OAAO;YAxEJ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAiFD,SAAUiB,0BAAV,CAAqCzD,IAArC,EAAuD;;;EAC3D,IAAM0D,GAAG,GAAG9D,cAAc,EAA1B,CAD2D;;;;;;;EAO3D+D,OAAO,CACL,QAAO,SAAG,SAAH,OAAG,KAAH,qBAAG,CAAEC,cAAL,MAAmB,IAAnB,IAAmB1C,aAAnB,GAAmB,MAAnB,GAAmBA,GAAE2C,SAA5B,MAA0C,UADrC,EAEL7D,IAFK,EAIL;EAAA;EAJK,EAIL;IACE8D,aAAa,EAAE;EADjB,CAJK,CAAP,CAP2D;;;EAiB3DH,OAAO,CACL,QAAO,SAAG,SAAH,OAAG,KAAH,qBAAG,CAAExD,SAAL,MAAc,IAAd,IAAc4D,aAAd,GAAc,MAAd,GAAcA,GAAErD,WAAvB,MAAuC,WADlC,EAELV,IAFK,EAIL;EAAA;EAJK,EAIL;IACE8D,aAAa,EAAE;EADjB,CAJK,CAAP,CAjB2D;;;EA2B3DH,OAAO,CACL,QAAO,qBAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEjC,OAAL,MAAc,IAAd,IAAcsC,aAAd,GAAc,MAAd,GAAcA,UAAd,MAAuB,IAAvB,IAAuBC,aAAvB,GAAuB,MAAvB,GAAuBA,aAAvB,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,UAA1C,MAAsD,UADjD,EAELlE,IAFK,EAIL;EAAA;EAJK,EAIL;IACE8D,aAAa,EAAE;EADjB,CAJK,CAAP;;EAQAH,OAAO,CACL,QAAO,qBAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEjC,OAAL,MAAc,IAAd,IAAcyC,aAAd,GAAc,MAAd,GAAcA,UAAd,MAAuB,IAAvB,IAAuBC,aAAvB,GAAuB,MAAvB,GAAuBA,aAAvB,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,cAA1C,MAA0D,UADrD,EAELrE,IAFK,EAIL;EAAA;EAJK,EAIL;IACE8D,aAAa,EAAE;EADjB,CAJK,CAAP,CAnC2D;;;EA6C3DH,OAAO,CACL,QAAO,eAAG,SAAH,OAAG,KAAH,qBAAG,CAAEjC,OAAL,MAAY,IAAZ,IAAY4C,aAAZ,GAAY,MAAZ,GAAYA,GAAEpC,YAAd,MAA4B,IAA5B,IAA4BqC,aAA5B,GAA4B,MAA5B,GAA4BA,OAAnC,MAA4C,UADvC,EAELvE,IAFK,EAIL;EAAA;EAJK,EAIL;IACE8D,aAAa,EAAE;EADjB,CAJK,CAAP;AAQD;AAED;;;;AAIG;;;SACYxD,a;;;;;2EAAf,mBAA6BD,SAA7B;IAAA;IAAA;MAAA;QAAA;UAAA;YACQmE,KADR,GACgBC,mBAAmB,CAACpE,SAAD,CADnC;;;;;YAAA;YAAA,OAOoBqE,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqB,SAArB,EAAgCJ,KAAhC,CAPpB;;UAAA;YAOQK,GAPR;YAQQC,GARR,GAQcC,KAAK,CAACC,IAAN,CAAW,IAAIC,UAAJ,CAAeJ,GAAf,CAAX,CARd;YAAA,mCASSC,GAAG,CAACI,GAAJ,CAAQ,aAAG;cAAA,OAAIC,GAAG,CAACC,QAAJ,CAAa,EAAb,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAJ;YAAA,CAAX,EAAkDC,IAAlD,CAAuD,EAAvD,CATT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAYA,SAASb,mBAAT,CAA6Bc,GAA7B,EAAwC;;;EAGtCnF,WAAW,CACT,eAAeoF,IAAf,CAAoBD,GAApB,CADS,EAET,wCAFS,CAAX;;EAIA,IAAI,OAAOE,WAAP,KAAuB,WAA3B,EAAwC;IACtC,OAAO,IAAIA,WAAJ,GAAkBC,MAAlB,CAAyBH,GAAzB,CAAP;EACD;;EAED,IAAMI,IAAI,GAAG,IAAIC,WAAJ,CAAgBL,GAAG,CAACM,MAApB,CAAb;EACA,IAAMC,IAAI,GAAG,IAAIb,UAAJ,CAAeU,IAAf,CAAb;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACM,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;IACnCD,IAAI,CAACC,CAAD,CAAJ,GAAUR,GAAG,CAACS,UAAJ,CAAeD,CAAf,CAAV;EACD;;EACD,OAAOD,IAAP;AACF;AClTA;;;;;;;;;;;;;;;AAeG;;;AAgBH,IAAMG,iBAAiB,GAAG,EAA1B;AAEA;;IACaC,uB;;;;;EAAb;IAAA;;IAAA;;;IACmB,yBAAmB,IAAIC,GAAJ,EAAnB;IAET,oBAAc,IAAIxE,OAAJ,CAAkB,iBAAO,EAAG;MAChD,MAAKyE,gBAAL,GAAwB/D,OAAxB;IACD,CAFqB,CAAd;IAHV;EAgCC;;;;WAzBC,4BAAmBgE,EAAnB,EAA6C;MAC3C,KAAKC,gBAAL,CAAsBC,GAAtB,CAA0BF,EAA1B;IACD;;;WAED,+BAAsBA,EAAtB,EAAgD;MAC9C,KAAKC,gBAAL,CAAsBE,MAAtB,CAA6BH,EAA7B;IACD,C;;;;;WAID,yBAAa;MACX,KAAKI,mBAAL,GAA2B,IAA3B;MACA,KAAKC,2BAAL,GAAmC,KAAnC;IACD;;;;;WAGD,iBAAQzG,KAAR,EAAwB;MACtB,KAAKmG,gBAAL;MACA,KAAKE,gBAAL,CAAsBK,OAAtB,CAA8B,YAAE;QAAA,OAAIN,EAAE,CAACpG,KAAD,CAAN;MAAA,CAAhC;MACA,4FAAqBA,KAArB;IACD;;;;oFAED;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAK2G,WADb;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;EA7B2CC,gB;AAkC7C;;AAEG;;;AACG,SAAUC,iBAAV,CACJ9G,IADI,EAEJe,IAFI,EAGyB;EAAA,IAA7BE,OAA6B,uEAAJ,IAAI;EAE7B,OAAO;IACLF,IAAI,EAAJA,IADK;IAELE,OAAO,EAAPA,OAFK;IAGL8F,WAAW,EAAE,IAHR;IAIL1G,SAAS,EAAE2G,iBAAiB,EAJvB;IAKLC,QAAQ,EAAE,IALL;IAMLC,QAAQ,EAAElH,IAAI,CAACkH,QANV;IAOLC,KAAK,EAAEnE,YAAY,CAAChD,IAAD,EAAmC;IAAA;IAAnC;EAPd,CAAP;AASD;;AAEe,2BACdA,IADc,EAEdC,KAFc,EAEE;EAEhB,OAAOmH,OAAO,GAAGC,IAAV,CACLC,cAAc,CAACtH,IAAD,CADT,EAEJC,KAFI,CAAP;AAID;;SAEqBsH,kB;;;;;mFAAf,mBACLvH,IADK;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAGgBoH,OAAO,GAAGI,IAAV,CACnBF,cAAc,CAACtH,IAAD,CADK,CAHhB;;UAAA;YAGCC,KAHD;;YAAA,KAMDA,KANC;cAAA;cAAA;YAAA;;YAAA;YAAA,OAOGmH,OAAO,GAAGK,OAAV,CAAkBH,cAAc,CAACtH,IAAD,CAAhC,CAPH;;UAAA;YAAA,mCASEC,KATF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAYS,iCACdyH,YADc,EAEdC,GAFc,EAEH;aAAA;;;EAGX,IAAMC,WAAW,GAAGC,wBAAwB,CAACF,GAAD,CAA5C,CAHW;;;;;;;EASX,IAAIC,WAAW,CAACE,QAAZ,CAAqB,mBAArB,CAAJ,EAA+C;;;;IAI7C,IAAMC,MAAM,GAAGC,mBAAmB,CAACJ,WAAD,CAAlC,CAJ6C;;IAM7C,IAAMK,WAAW,GAAGF,MAAM,CAAC,eAAD,CAAN,GAChBG,eAAe,CAACC,kBAAkB,CAACJ,MAAM,CAAC,eAAD,CAAP,CAAnB,CADC,GAEhB,IAFJ;IAGA,IAAMK,IAAI,GAAG,uBAAW,KAAX,mBAAW,WAAX,GAAW,MAAX,cAAW,CAAG,MAAH,CAAX,MAAqB,IAArB,IAAqBlH,aAArB,GAAqB,MAArB,GAAqBA,GAAEmH,KAAF,CAAQ,OAAR,CAArB,MAAwC,IAAxC,IAAwCtE,aAAxC,GAAwC,MAAxC,GAAwCA,KAArD;IACA,IAAMoD,KAAK,GAAGiB,IAAI,GAAGpF,YAAY,CAACoF,IAAD,CAAf,GAAwB,IAA1C;;IACA,IAAIjB,KAAJ,EAAW;MACT,OAAO;QACLpG,IAAI,EAAE2G,YAAY,CAAC3G,IADd;QAELE,OAAO,EAAEyG,YAAY,CAACzG,OAFjB;QAGLiG,QAAQ,EAAEQ,YAAY,CAACR,QAHlB;QAILC,KAAK,EAALA,KAJK;QAKLJ,WAAW,EAAE,IALR;QAML1G,SAAS,EAAE,IANN;QAOL4G,QAAQ,EAAE;MAPL,CAAP;IASD,CAVD,MAUO;MACL,OAAO;QACLlG,IAAI,EAAE2G,YAAY,CAAC3G,IADd;QAELE,OAAO,EAAEyG,YAAY,CAACzG,OAFjB;QAGLiG,QAAQ,EAAEQ,YAAY,CAACR,QAHlB;QAIL7G,SAAS,EAAEqH,YAAY,CAACrH,SAJnB;QAKL0G,WAAW,EAAEa,WALR;QAMLX,QAAQ,EAAE;MANL,CAAP;IAQD;EACF;;EAED,OAAO,IAAP;AACD;;AAED,SAASD,iBAAT,GAA0B;EACxB,IAAMsB,KAAK,GAAG,EAAd;EACA,IAAMC,YAAY,GAChB,gEADF;;EAEA,KAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,iBAApB,EAAuCF,CAAC,EAAxC,EAA4C;IAC1C,IAAMyC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,YAAY,CAAC1C,MAAxC,CAAZ;IACAyC,KAAK,CAACM,IAAN,CAAWL,YAAY,CAACM,MAAb,CAAoBL,GAApB,CAAX;EACD;;EACD,OAAOF,KAAK,CAAChD,IAAN,CAAW,EAAX,CAAP;AACD;;AAED,SAAS8B,OAAT,GAAgB;EACd,OAAO0B,YAAY,CAACC,uBAAD,CAAnB;AACD;;AAED,SAASzB,cAAT,CAAwBtH,IAAxB,EAA0C;EACxC,OAAOgJ,mBAAmB;EAAA;EAAA,EAAqBhJ,IAAI,CAACiJ,MAAL,CAAYC,MAAjC,EAAyClJ,IAAI,CAACmJ,IAA9C,CAA1B;AACD;;AAED,SAASjB,eAAT,CAAyBkB,IAAzB,EAAqC;EACnC,IAAI;IACF,OAAOC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;EACD,CAFD,CAEE,OAAOG,CAAP,EAAU;IACV,OAAO,IAAP;EACD;AACF,C,CAED;;;AACM,SAAU1B,wBAAV,CAAmCF,GAAnC,EAA8C;EAClD,IAAMI,MAAM,GAAGC,mBAAmB,CAACL,GAAD,CAAlC;EACA,IAAM6B,IAAI,GAAGzB,MAAM,CAAC,MAAD,CAAN,GAAiBI,kBAAkB,CAACJ,MAAM,CAAC,MAAD,CAAP,CAAnC,GAAsD/G,SAAnE,CAFkD;;EAIlD,IAAMyI,cAAc,GAAGzB,mBAAmB,CAACwB,IAAD,CAAnB,CAA0B,MAA1B,CAAvB,CAJkD;;EAMlD,IAAME,WAAW,GAAG3B,MAAM,CAAC,cAAD,CAAN,GAChBI,kBAAkB,CAACJ,MAAM,CAAC,cAAD,CAAP,CADF,GAEhB/G,SAFJ;EAGA,IAAM2I,iBAAiB,GAAG3B,mBAAmB,CAAC0B,WAAD,CAAnB,CAAiC,MAAjC,CAA1B;EACA,OAAOC,iBAAiB,IAAID,WAArB,IAAoCD,cAApC,IAAsDD,IAAtD,IAA8D7B,GAArE;AACD;AAED;;;AAGG;;;AACH,SAASK,mBAAT,CAA6BL,GAA7B,EAAoD;EAClD,IAAI,EAACA,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEG,QAAL,CAAc,GAAd,CAAD,CAAJ,EAAyB;IACvB,OAAO,EAAP;EACD;;EAED,iBAAqBH,GAAG,CAACU,KAAJ,CAAU,GAAV,CAArB;EAAA;EAAA,IAAOuB,CAAP;EAAA,IAAaC,IAAb;;EACA,OAAOC,iBAAiB,CAACD,IAAI,CAACvE,IAAL,CAAU,GAAV,CAAD,CAAxB;AACF;AChNA;;;;;;;;;;;;;;;AAeG;;AAgCH;;;AAGG;;;AACH,IAAMyE,wBAAwB,GAAG,GAAjC;;IAEMC,4B;EAAN;IAAA;;IACW,KAAoBC,oBAApB,GAAuBC,yBAAvB;IACA,8BAAyB,IAAzB,CAFX,CAEyC;;IACtB,qBAAgB,IAAIC,GAAJ,EAAhB;IACA,KAAwBC,wBAAxB,GAA0D,EAA1D;IAEjB,KAAmBC,mBAAnB,GAAsBC,kBAAtB;IACA,KAAuBC,uBAAvB,GAA0BA,uBAA1B;EAwHD;;;;;oFAtHC,kBAAkBvK,IAAlB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQwK,GADR,GACcxK,IAAI,CAACyK,IAAL,EADd;gBAEMC,OAFN,GAEgB,KAAKC,aAAL,CAAmBC,GAAnB,CAAuBJ,GAAvB,CAFhB;;gBAGE,IAAI,CAACE,OAAL,EAAc;kBACZA,OAAO,GAAG,IAAIxE,uBAAJ,CAA4BlG,IAA5B,CAAV;kBACA,KAAK2K,aAAL,CAAmBE,GAAnB,CAAuBL,GAAvB,EAA4BE,OAA5B;kBACA,KAAKI,uBAAL,CAA6B9K,IAA7B,EAAmC0K,OAAnC;gBACD;;gBAPH,kCAQSA,OART;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAWA,oBAAW1K,IAAX,EAA6B;MAC3BY,KAAK,CAACZ,IAAD,EAAK;MAAA;MAAL,CAAL;IACD;;;;sFAED,kBACEA,IADF,EAEEE,QAFF,EAGE6K,QAHF,EAIE9J,OAJF;QAAA;QAAA;UAAA;YAAA;cAAA;gBAMEwC,0BAA0B,CAACzD,IAAD,CAA1B;;gBANF;gBAAA,OAOwB,KAAKgL,WAAL,CAAiBhL,IAAjB,CAPxB;;cAAA;gBAOQ0K,OAPR;gBAAA;gBAAA,OAQQA,OAAO,CAACO,WAAR,EARR;;cAAA;;;;gBAaEP,OAAO,CAACQ,aAAR;;gBACAC,sBAAsB;;gBAdxB;gBAAA,OAgBQ,KAAKC,iBAAL,CAAuBpL,IAAvB,CAhBR;;cAAA;gBAkBQC,KAlBR,GAkBgB6G,iBAAiB,CAAC9G,IAAD,EAAO+K,QAAP,EAAiB9J,OAAjB,CAlBjC;gBAAA;gBAAA,OAmBQoK,iBAAiB,CAACrL,IAAD,EAAOC,KAAP,CAnBzB;;cAAA;gBAAA;gBAAA,OAoBoBF,mBAAmB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,CApBvC;;cAAA;gBAoBQyH,GApBR;gBAAA;gBAAA,OAqBuBnG,gBAAgB,CAACmG,GAAD,CArBvC;;cAAA;gBAqBQ5F,MArBR;gBAAA,kCAsBSO,iBAAiB,CAACtC,IAAD,EAAO0K,OAAP,EAAgB3I,MAAhB,CAtB1B;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAyBA,sCACEuJ,KADF,EAEEC,GAFF,EAEoC;MAElC,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;IACD;;;WAED,2BAAkBxL,IAAlB,EAAoC;MAClC,IAAMwK,GAAG,GAAGxK,IAAI,CAACyK,IAAL,EAAZ;;MACA,IAAI,CAAC,KAAKL,wBAAL,CAA8BI,GAA9B,CAAL,EAAyC;QACvC,KAAKJ,wBAAL,CAA8BI,GAA9B,IAAqCrJ,eAAe,CAACnB,IAAD,CAApD;MACD;;MAED,OAAO,KAAKoK,wBAAL,CAA8BI,GAA9B,CAAP;IACD;;;WAEO,iCACNxK,IADM,EAEN0K,OAFM,EAEmB;;MAGzB,sBAAqD9K,cAAc,EAAnE;MAAA,IAAQgE,cAAR,mBAAQA,cAAR;MAAA,IAAwB6H,aAAxB,mBAAwBA,aAAxB;MAAA,IAAuCtL,SAAvC,mBAAuCA,SAAvC;;MAEA,IAAMuL,cAAc,GAAG3I,UAAU,0EAAC;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAG1BwE,kBAAkB,CAACvH,IAAD,CAHQ;;cAAA;gBAIhC0K,OAAO,CAACiB,OAAR,CAAgBC,eAAe,EAA/B;;cAJgC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAD,IAK9B7B,wBAL8B,CAAjC;;MAOA,IAAM8B,gBAAgB;QAAA,uEAAG,kBACvBC,SADuB;UAAA;UAAA;YAAA;cAAA;gBAAA;;kBAIvBtI,YAAY,CAACkI,cAAD,CAAZ;kBAJuB;kBAAA,OAMInE,kBAAkB,CAACvH,IAAD,CANtB;;gBAAA;kBAMjB0H,YANiB;kBAOnBqE,UAPmB,GAOY,IAPZ;;kBAQvB,IAAIrE,YAAY,KAAIoE,SAAS,KAAT,iBAAS,KAAT,2BAAS,CAAG,KAAH,CAAb,CAAhB,EAAwC;oBACtCC,UAAU,GAAGC,uBAAuB,CAACtE,YAAD,EAAeoE,SAAS,CAAC,KAAD,CAAxB,CAApC;kBACD,CAVsB;;;kBAavBpB,OAAO,CAACiB,OAAR,CAAgBI,UAAU,IAAIH,eAAe,EAA7C;;gBAbuB;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAH;;QAAA,gBAAhBC,gBAAgB;UAAA;QAAA;MAAA,GAAtB,CAZyB;;;MA6BzB,IACE,OAAOjI,cAAP,KAA0B,WAA1B,IACA,OAAOA,cAAc,CAACC,SAAtB,KAAoC,UAFtC,EAGE;QACAD,cAAc,CAACC,SAAf,CAAyB,IAAzB,EAA+BgI,gBAA/B;MACD,CAlCwB;;;;;;;MAyCzB,IAAMI,qBAAqB,GAAGR,aAA9B;MACA,IAAMS,aAAa,aAAM/L,SAAS,CAACO,WAAV,CAAsByL,WAAtB,EAAN,QAAnB;;MACAvM,cAAc,GAAG6L,aAAjB;QAAA,uEAAiC,kBAAM9D,GAAN;UAAA;YAAA;cAAA;gBAAA;kBAC/B,IAAIA,GAAG,CAACwE,WAAJ,GAAkBC,UAAlB,CAA6BF,aAA7B,CAAJ,EAAiD;;;oBAG/CL,gBAAgB,CAAC;sBAAElE,GAAG,EAAHA;oBAAF,CAAD,CAAhB;kBACD,CAL8B;;;kBAO/B,IAAI,OAAOsE,qBAAP,KAAiC,UAArC,EAAiD;oBAC/C,IAAI;sBACFA,qBAAqB,CAACtE,GAAD,CAArB;oBACD,CAFD,CAEE,OAAO4B,CAAP,EAAU;;sBAEV8C,OAAO,CAAClF,KAAR,CAAcoC,CAAd;oBACD;kBACF;;gBAd8B;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAjC;;QAAA;UAAA;QAAA;MAAA;IAgBD;;;;;AAGH;;;;;AAKG;;;AACI,IAAM+C,4BAA4B,GACvCtC,4BADK;;AAGP,SAAS4B,eAAT,GAAwB;EACtB,OAAO;IACL7K,IAAI,EAAuB;IAAA;IADtB;IAELE,OAAO,EAAE,IAFJ;IAGLZ,SAAS,EAAE,IAHN;IAIL0G,WAAW,EAAE,IAJR;IAKLE,QAAQ,EAAE,IALL;IAMLC,QAAQ,EAAE,IANL;IAOLC,KAAK,EAAEnE,YAAY,CAA6B;IAAA;IAA7B;EAPd,CAAP;AASF;ACzMA;;;;;;;;;;;;;;;AAeG;AAqCH;AACA;AACA;;;AACgB,gCAAuBhD,IAAvB,EAAmCuM,SAAnC,EAAoD;EAClEC,SAAS,CAACxM,IAAD,CAAT,CAAgByM,aAAhB,CAA8BF,SAA9B;AACF","names":["_cordovaWindow","window","REDIRECT_TIMEOUT_MS","_generateHandlerUrl","auth","event","provider","BuildInfo","debugAssert","sessionId","computeSha256","sessionDigest","additionalParams","_isIOS","packageName","_isAndroid","_fail","displayName","_getRedirectUrl","type","undefined","eventId","_a","_validateOrigin","request","iosBundleId","androidPackageName","_getProjectConfig","_performRedirect","handlerUrl","cordova","Promise","plugins","browsertab","isAvailable","iabRef","browserTabIsAvailable","openUrl","InAppBrowser","open","_isIOS7Or8","resolve","_waitForAppResume","eventListener","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","_createError","visibilityChanged","visibilityState","addPassiveListener","document","addEventListener","removePassiveListener","removeEventListener","clearTimeout","_checkCordovaConfiguration","win","_assert","universalLinks","subscribe","missingPlugin","_b","_c","_d","_e","_f","_g","_h","_j","_k","bytes","stringToArrayBuffer","crypto","subtle","digest","buf","arr","Array","from","Uint8Array","map","num","toString","padStart","join","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","i","charCodeAt","SESSION_ID_LENGTH","CordovaAuthEventManager","Set","resolveInialized","cb","passiveListeners","add","delete","queuedRedirectEvent","hasHandledPotentialRedirect","forEach","initPromise","AuthEventManager","_generateNewEvent","urlResponse","generateSessionId","postBody","tenantId","error","storage","_set","persistenceKey","_getAndRemoveEvent","_get","_remove","partialEvent","url","callbackUrl","_getDeepLinkFromCallback","includes","params","searchParamsOrEmpty","errorObject","parseJsonOrNull","decodeURIComponent","code","split","chars","allowedChars","idx","Math","floor","random","push","charAt","_getInstance","browserLocalPersistence","_persistenceKeyName","config","apiKey","name","json","JSON","parse","e","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","_","rest","querystringDecode","INITIAL_EVENT_TIMEOUT_MS","CordovaPopupRedirectResolver","_redirectPersistence","browserSessionPersistence","Map","originValidationPromises","_completeRedirectFn","_getRedirectResult","_overrideRedirectResult","key","_key","manager","eventManagers","get","set","attachCallbackListeners","authType","_initialize","initialized","resetRedirect","_clearRedirectOutcomes","_originValidation","_savePartialEvent","_auth","_cb","Error","handleOpenURL","noEventTimeout","onEvent","generateNoEvent","universalLinksCb","eventData","finalEvent","_eventFromPartialAndUrl","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","cordovaPopupRedirectResolver","framework","_castAuth","_logFramework"],"sources":["/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth/src/platform_cordova/plugins.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/utils.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/events.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/popup_redirect.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth/internal/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface CordovaWindow extends Window {\n  cordova: {\n    plugins: {\n      browsertab: {\n        isAvailable(cb: (available: boolean) => void): void;\n        openUrl(url: string): void;\n        close(): void;\n      };\n    };\n\n    InAppBrowser: {\n      open(url: string, target: string, options: string): InAppBrowserRef;\n    };\n  };\n\n  universalLinks: {\n    subscribe(\n      n: null,\n      cb: (event: Record<string, string> | null) => void\n    ): void;\n  };\n\n  BuildInfo: {\n    readonly packageName: string;\n    readonly displayName: string;\n  };\n\n  handleOpenURL(url: string): void;\n}\n\nexport interface InAppBrowserRef {\n  close?: () => void;\n}\n\nexport function _cordovaWindow(): CordovaWindow {\n  return (window as unknown) as CordovaWindow;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  debugAssert,\n  _assert,\n  _createError,\n  _fail\n} from '../../core/util/assert';\nimport { _isAndroid, _isIOS, _isIOS7Or8 } from '../../core/util/browser';\nimport { _getRedirectUrl } from '../../core/util/handler';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent } from '../../model/popup_redirect';\nimport { InAppBrowserRef, _cordovaWindow } from '../plugins';\nimport {\n  GetProjectConfigRequest,\n  _getProjectConfig\n} from '../../api/project_config/get_project_config';\n\n/**\n * How long to wait after the app comes back into focus before concluding that\n * the user closed the sign in tab.\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n\n/**\n * Generates the URL for the OAuth handler.\n */\nexport async function _generateHandlerUrl(\n  auth: AuthInternal,\n  event: AuthEvent,\n  provider: AuthProvider\n): Promise<string> {\n  // Get the cordova plugins\n  const { BuildInfo } = _cordovaWindow();\n  debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n  const sessionDigest = await computeSha256(event.sessionId);\n\n  const additionalParams: Record<string, string> = {};\n  if (_isIOS()) {\n    // iOS app identifier\n    additionalParams['ibi'] = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    // Android app identifier\n    additionalParams['apn'] = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Add the display name if available\n  if (BuildInfo.displayName) {\n    additionalParams['appDisplayName'] = BuildInfo.displayName;\n  }\n\n  // Attached the hashed session ID\n  additionalParams['sessionId'] = sessionDigest;\n  return _getRedirectUrl(\n    auth,\n    provider,\n    event.type,\n    undefined,\n    event.eventId ?? undefined,\n    additionalParams\n  );\n}\n\n/**\n * Validates that this app is valid for this project configuration\n */\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  const { BuildInfo } = _cordovaWindow();\n  const request: GetProjectConfigRequest = {};\n  if (_isIOS()) {\n    request.iosBundleId = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    request.androidPackageName = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Will fail automatically if package name is not authorized\n  await _getProjectConfig(auth, request);\n}\n\nexport function _performRedirect(\n  handlerUrl: string\n): Promise<InAppBrowserRef | null> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef: InAppBrowserRef | null = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(\n          handlerUrl,\n          _isIOS7Or8() ? '_blank' : '_system',\n          'location=yes'\n        );\n      }\n      resolve(iabRef);\n    });\n  });\n}\n\n// Thin interface wrapper to avoid circular dependency with ./events module\ninterface PassiveAuthEventListener {\n  addPassiveListener(cb: () => void): void;\n  removePassiveListener(cb: () => void): void;\n}\n\n/**\n * This function waits for app activity to be seen before resolving. It does\n * this by attaching listeners to various dom events. Once the app is determined\n * to be visible, this promise resolves. AFTER that resolution, the listeners\n * are detached and any browser tabs left open will be closed.\n */\nexport async function _waitForAppResume(\n  auth: AuthInternal,\n  eventListener: PassiveAuthEventListener,\n  iabRef: InAppBrowserRef | null\n): Promise<void> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  let cleanup = (): void => {};\n  try {\n    await new Promise<void>((resolve, reject) => {\n      let onCloseTimer: number | null = null;\n\n      // DEFINE ALL THE CALLBACKS =====\n      function authEventSeen(): void {\n        // Auth event was detected. Resolve this promise and close the extra\n        // window if it's still open.\n        resolve();\n        const closeBrowserTab = cordova.plugins.browsertab?.close;\n        if (typeof closeBrowserTab === 'function') {\n          closeBrowserTab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (typeof iabRef?.close === 'function') {\n          iabRef.close();\n        }\n      }\n\n      function resumed(): void {\n        if (onCloseTimer) {\n          // This code already ran; do not rerun.\n          return;\n        }\n\n        onCloseTimer = window.setTimeout(() => {\n          // Wait two seeconds after resume then reject.\n          reject(_createError(auth, AuthErrorCode.REDIRECT_CANCELLED_BY_USER));\n        }, REDIRECT_TIMEOUT_MS);\n      }\n\n      function visibilityChanged(): void {\n        if (document?.visibilityState === 'visible') {\n          resumed();\n        }\n      }\n\n      // ATTACH ALL THE LISTENERS =====\n      // Listen for the auth event\n      eventListener.addPassiveListener(authEventSeen);\n\n      // Listen for resume and visibility events\n      document.addEventListener('resume', resumed, false);\n      if (_isAndroid()) {\n        document.addEventListener('visibilitychange', visibilityChanged, false);\n      }\n\n      // SETUP THE CLEANUP FUNCTION =====\n      cleanup = () => {\n        eventListener.removePassiveListener(authEventSeen);\n        document.removeEventListener('resume', resumed, false);\n        document.removeEventListener(\n          'visibilitychange',\n          visibilityChanged,\n          false\n        );\n        if (onCloseTimer) {\n          window.clearTimeout(onCloseTimer);\n        }\n      };\n    });\n  } finally {\n    cleanup();\n  }\n}\n\n/**\n * Checks the configuration of the Cordova environment. This has no side effect\n * if the configuration is correct; otherwise it throws an error with the\n * missing plugin.\n */\nexport function _checkCordovaConfiguration(auth: AuthInternal): void {\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(\n    typeof win?.universalLinks?.subscribe === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-universal-links-plugin-fix'\n    }\n  );\n\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(\n    typeof win?.BuildInfo?.packageName !== 'undefined',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-buildInfo'\n    }\n  );\n\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.openUrl === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.isAvailable === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(\n    typeof win?.cordova?.InAppBrowser?.open === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-inappbrowser'\n    }\n  );\n}\n\n/**\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\n * protocol).\n */\nasync function computeSha256(sessionId: string): Promise<string> {\n  const bytes = stringToArrayBuffer(sessionId);\n\n  // TODO: For IE11 crypto has a different name and this operation comes back\n  //       as an object, not a promise. This is the old proposed standard that\n  //       is used by IE11:\n  // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n  const buf = await crypto.subtle.digest('SHA-256', bytes);\n  const arr = Array.from(new Uint8Array(buf));\n  return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n}\n\nfunction stringToArrayBuffer(str: string): Uint8Array {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(\n    /[0-9a-zA-Z]+/.test(str),\n    'Can only convert alpha-numeric strings'\n  );\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystringDecode } from '@firebase/util';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../../core/errors';\nimport { PersistedBlob, PersistenceInternal } from '../../core/persistence';\nimport {\n  KeyName,\n  _persistenceKeyName\n} from '../../core/persistence/persistence_user_manager';\nimport { _createError } from '../../core/util/assert';\nimport { _getInstance } from '../../core/util/instantiator';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent, AuthEventType } from '../../model/popup_redirect';\nimport { browserLocalPersistence } from '../../platform_browser/persistence/local_storage';\n\nconst SESSION_ID_LENGTH = 20;\n\n/** Custom AuthEventManager that adds passive listeners to events */\nexport class CordovaAuthEventManager extends AuthEventManager {\n  private readonly passiveListeners = new Set<(e: AuthEvent) => void>();\n  private resolveInialized!: () => void;\n  private initPromise = new Promise<void>(resolve => {\n    this.resolveInialized = resolve;\n  });\n\n  addPassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.add(cb);\n  }\n\n  removePassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.delete(cb);\n  }\n\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect(): void {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n\n  /** Override the onEvent method */\n  onEvent(event: AuthEvent): boolean {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n\n  async initialized(): Promise<void> {\n    await this.initPromise;\n  }\n}\n\n/**\n * Generates a (partial) {@link AuthEvent}.\n */\nexport function _generateNewEvent(\n  auth: AuthInternal,\n  type: AuthEventType,\n  eventId: string | null = null\n): AuthEvent {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n\nexport function _savePartialEvent(\n  auth: AuthInternal,\n  event: AuthEvent\n): Promise<void> {\n  return storage()._set(\n    persistenceKey(auth),\n    (event as object) as PersistedBlob\n  );\n}\n\nexport async function _getAndRemoveEvent(\n  auth: AuthInternal\n): Promise<AuthEvent | null> {\n  const event = (await storage()._get(\n    persistenceKey(auth)\n  )) as AuthEvent | null;\n  if (event) {\n    await storage()._remove(persistenceKey(auth));\n  }\n  return event;\n}\n\nexport function _eventFromPartialAndUrl(\n  partialEvent: AuthEvent,\n  url: string\n): AuthEvent | null {\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError']\n      ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\n      : null;\n    const code = errorObject?.['code']?.split('auth/')?.[1];\n    const error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId(): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\n\nfunction storage(): PersistenceInternal {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth: AuthInternal): string {\n  return _persistenceKeyName(KeyName.AUTH_EVENT, auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json: string): ReturnType<typeof JSON.parse> | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\n// Exported for testing\nexport function _getDeepLinkFromCallback(url: string): string {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id']\n    ? decodeURIComponent(params['deep_link_id'])\n    : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * Optimistically tries to get search params from a string, or else returns an\n * empty search params object.\n */\nfunction searchParamsOrEmpty(url: string | undefined): Record<string, string> {\n  if (!url?.includes('?')) {\n    return {};\n  }\n\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?')) as Record<string, string>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../../model/public_types';\nimport { browserSessionPersistence } from '../../platform_browser/persistence/session_storage';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { AuthPopup } from '../../platform_browser/util/popup';\nimport { _createError, _fail } from '../../core/util/assert';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _checkCordovaConfiguration,\n  _generateHandlerUrl,\n  _performRedirect,\n  _validateOrigin,\n  _waitForAppResume\n} from './utils';\nimport {\n  CordovaAuthEventManager,\n  _eventFromPartialAndUrl,\n  _generateNewEvent,\n  _getAndRemoveEvent,\n  _savePartialEvent\n} from './events';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { _getRedirectResult } from '../../platform_browser/strategies/redirect';\nimport { _clearRedirectOutcomes, _overrideRedirectResult } from '../../core/strategies/redirect';\nimport { _cordovaWindow } from '../plugins';\n\n/**\n * How long to wait for the initial auth event before concluding no\n * redirect pending\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\n\nclass CordovaPopupRedirectResolver implements PopupRedirectResolverInternal {\n  readonly _redirectPersistence = browserSessionPersistence;\n  readonly _shouldInitProactively = true; // This is lightweight for Cordova\n  private readonly eventManagers = new Map<string, CordovaAuthEventManager>();\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  _completeRedirectFn = _getRedirectResult;\n  _overrideRedirectResult = _overrideRedirectResult;\n\n  async _initialize(auth: AuthInternal): Promise<CordovaAuthEventManager> {\n    const key = auth._key();\n    let manager = this.eventManagers.get(key);\n    if (!manager) {\n      manager = new CordovaAuthEventManager(auth);\n      this.eventManagers.set(key, manager);\n      this.attachCallbackListeners(auth, manager);\n    }\n    return manager;\n  }\n\n  _openPopup(auth: AuthInternal): Promise<AuthPopup> {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    _checkCordovaConfiguration(auth);\n    const manager = await this._initialize(auth);\n    await manager.initialized();\n\n    // Reset the persisted redirect states. This does not matter on Web where\n    // the redirect always blows away application state entirely. On Cordova,\n    // the app maintains control flow through the redirect.\n    manager.resetRedirect();\n    _clearRedirectOutcomes();\n\n    await this._originValidation(auth);\n\n    const event = _generateNewEvent(auth, authType, eventId);\n    await _savePartialEvent(auth, event);\n    const url = await _generateHandlerUrl(auth, event, provider);\n    const iabRef = await _performRedirect(url);\n    return _waitForAppResume(auth, manager, iabRef);\n  }\n\n  _isIframeWebStorageSupported(\n    _auth: AuthInternal,\n    _cb: (support: boolean) => unknown\n  ): void {\n    throw new Error('Method not implemented.');\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  private attachCallbackListeners(\n    auth: AuthInternal,\n    manager: AuthEventManager\n  ): void {\n    // Get the global plugins\n    const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\n\n    const noEventTimeout = setTimeout(async () => {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      await _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }, INITIAL_EVENT_TIMEOUT_MS);\n\n    const universalLinksCb = async (\n      eventData: Record<string, string> | null\n    ): Promise<void> => {\n      // We have an event so we can clear the no event timeout\n      clearTimeout(noEventTimeout);\n\n      const partialEvent = await _getAndRemoveEvent(auth);\n      let finalEvent: AuthEvent | null = null;\n      if (partialEvent && eventData?.['url']) {\n        finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n      }\n\n      // If finalEvent is never filled, trigger with no event\n      manager.onEvent(finalEvent || generateNoEvent());\n    };\n\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (\n      typeof universalLinks !== 'undefined' &&\n      typeof universalLinks.subscribe === 'function'\n    ) {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = async url => {\n      if (url.toLowerCase().startsWith(packagePrefix)) {\n        // We want this intentionally to float\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        universalLinksCb({ url });\n      }\n      // Call the developer's handler if it is present.\n      if (typeof existingHandleOpenURL === 'function') {\n        try {\n          existingHandleOpenURL(url);\n        } catch (e) {\n          // This is a developer error. Don't stop the flow of the SDK.\n          console.error(e);\n        }\n      }\n    };\n  }\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\n * based applications.\n *\n * @public\n */\nexport const cordovaPopupRedirectResolver: PopupRedirectResolver =\n  CordovaPopupRedirectResolver;\n\nfunction generateNoEvent(): AuthEvent {\n  return {\n    type: AuthEventType.UNKNOWN,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _castAuth } from '../src/core/auth/auth_impl';\nimport { Auth } from '../src/model/public_types';\n\n/**\n * This interface is intended only for use by @firebase/auth-compat, do not use directly\n */\nexport * from '../index';\n\nexport { SignInWithIdpResponse } from '../src/api/authentication/idp';\nexport { AuthErrorCode } from '../src/core/errors';\nexport { PersistenceInternal } from '../src/core/persistence';\nexport { _persistenceKeyName } from '../src/core/persistence/persistence_user_manager';\nexport { UserImpl } from '../src/core/user/user_impl';\nexport { _getInstance } from '../src/core/util/instantiator';\nexport {\n  PopupRedirectResolverInternal,\n  EventManager,\n  AuthEventType\n} from '../src/model/popup_redirect';\nexport { UserCredentialInternal, UserParameters } from '../src/model/user';\nexport { AuthInternal, ConfigInternal } from '../src/model/auth';\nexport { DefaultConfig, AuthImpl, _castAuth } from '../src/core/auth/auth_impl';\n\nexport { ClientPlatform, _getClientVersion } from '../src/core/util/version';\n\nexport { _generateEventId } from '../src/core/util/event_id';\nexport { TaggedWithTokenResponse } from '../src/model/id_token';\nexport { _fail, _assert } from '../src/core/util/assert';\nexport { AuthPopup } from '../src/platform_browser/util/popup';\nexport { _getRedirectResult } from '../src/platform_browser/strategies/redirect';\nexport { _overrideRedirectResult } from '../src/core/strategies/redirect';\nexport { cordovaPopupRedirectResolver } from '../src/platform_cordova/popup_redirect/popup_redirect';\nexport { FetchProvider } from '../src/core/util/fetch_provider';\nexport { SAMLAuthCredential } from '../src/core/credentials/saml';\n\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nexport function addFrameworkForLogging(auth: Auth, framework: string): void {\n  _castAuth(auth)._logFramework(framework);\n}\n"]},"metadata":{},"sourceType":"module"}