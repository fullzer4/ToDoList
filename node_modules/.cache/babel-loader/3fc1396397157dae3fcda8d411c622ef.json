{"ast":null,"code":"import _regeneratorRuntime from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, isReactNative, isNode, getUA, isIE, isIndexedDBAvailable, FirebaseError } from '@firebase/util';\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.15\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme() {\n  var _a;\n\n  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\n\n\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\n\n\nfunction _isAndroidOrIosCordovaScheme() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:' || _getCurrentScheme() === 'capacitor:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n}\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\n\n\nfunction _isNativeEnvironment() {\n  return isReactNative() || isNode();\n}\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\n\n\nfunction _isIe11() {\n  return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\n}\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\n\n\nfunction _isEdge() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /Edge\\/\\d+/.test(ua);\n}\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\n\n\nfunction _isLocalStorageNotSynchronized() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return _isIe11() || _isEdge(ua);\n}\n/** @return {boolean} Whether web storage is supported. */\n\n\nfunction _isWebStorageSupported() {\n  try {\n    var storage = self.localStorage;\n\n    var key = exp._generateEventId();\n\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key); // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n\n  return false;\n}\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\n\n\nfunction _isWorker() {\n  // WorkerGlobalScope only defined in worker environment.\n  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;\n}\n\nfunction _isPopupRedirectSupported() {\n  return (_isHttpOrHttps() || isBrowserExtension() || _isAndroidOrIosCordovaScheme()) && // React Native with remote debugging reports its location.protocol as\n  // http.\n  !_isNativeEnvironment() && // Local storage has to be supported for browser popup and redirect\n  // operations to work.\n  _isWebStorageSupported() && // DOM, popups and redirects are not supported within a worker.\n  !_isWorker();\n}\n/** Quick check that indicates the platform *may* be Cordova */\n\n\nfunction _isLikelyCordova() {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nfunction _isCordova() {\n  return _isCordova2.apply(this, arguments);\n}\n\nfunction _isCordova2() {\n  _isCordova2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            if (_isLikelyCordova()) {\n              _context17.next = 2;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", false);\n\n          case 2:\n            return _context17.abrupt(\"return\", new Promise(function (resolve) {\n              var timeoutId = setTimeout(function () {\n                // We've waited long enough; the telltale Cordova event didn't happen\n                resolve(false);\n              }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n              document.addEventListener('deviceready', function () {\n                clearTimeout(timeoutId);\n                resolve(true);\n              });\n            }));\n\n          case 3:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _isCordova2.apply(this, arguments);\n}\n\nfunction _getSelfWindow() {\n  return typeof window !== 'undefined' ? window : null;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\nvar _assert$3 = exp._assert;\nvar PERSISTENCE_KEY = 'persistence';\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\n\nfunction _validatePersistenceArgument(auth, persistence) {\n  _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\"\n  /* INVALID_PERSISTENCE */\n  ); // Validate if the specified type is supported in the current environment.\n\n\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && isIndexedDBAvailable(), auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  } // This is restricted by what the browser supports.\n\n\n  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\"\n  /* UNSUPPORTED_PERSISTENCE */\n  );\n}\n\nfunction _savePersistenceForRedirect(_x) {\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _savePersistenceForRedirect2() {\n  _savePersistenceForRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(auth) {\n    var session, key;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return auth._initializationPromise;\n\n          case 2:\n            session = getSessionStorageIfAvailable();\n            key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\n\n            if (session) {\n              session.setItem(key, auth._getPersistence());\n            }\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _getPersistencesFromRedirect(apiKey, appName) {\n  var session = getSessionStorageIfAvailable();\n\n  if (!session) {\n    return [];\n  }\n\n  var key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n\n  var persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n\n    default:\n      return [];\n  }\n}\n/** Returns session storage, or null if the property access errors */\n\n\nfunction getSessionStorageIfAvailable() {\n  var _a;\n\n  try {\n    return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\n  } catch (e) {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _assert$2 = exp._assert;\n/** Platform-agnostic popup-redirect resolver */\n\nvar CompatPopupRedirectResolver = /*#__PURE__*/function () {\n  function CompatPopupRedirectResolver() {\n    _classCallCheck(this, CompatPopupRedirectResolver);\n\n    // Create both resolvers for dynamic resolution later\n    this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\n    this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver); // The actual resolver in use: either browserResolver or cordovaResolver.\n\n    this.underlyingResolver = null;\n    this._redirectPersistence = exp.browserSessionPersistence;\n    this._completeRedirectFn = exp._getRedirectResult;\n    this._overrideRedirectResult = exp._overrideRedirectResult;\n  }\n\n  _createClass(CompatPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(auth) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context.abrupt(\"return\", this.assertedUnderlyingResolver._initialize(auth));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _initialize(_x2) {\n        return _initialize2.apply(this, arguments);\n      }\n\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function () {\n      var _openPopup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context2.abrupt(\"return\", this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _openPopup(_x3, _x4, _x5, _x6) {\n        return _openPopup2.apply(this, arguments);\n      }\n\n      return _openPopup;\n    }()\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context3.abrupt(\"return\", this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _openRedirect(_x7, _x8, _x9, _x10) {\n        return _openRedirect2.apply(this, arguments);\n      }\n\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(auth, cb) {\n      this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      return this.assertedUnderlyingResolver._originValidation(auth);\n    }\n  }, {\n    key: \"_shouldInitProactively\",\n    get: function get() {\n      return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n    }\n  }, {\n    key: \"assertedUnderlyingResolver\",\n    get: function get() {\n      _assert$2(this.underlyingResolver, \"internal-error\"\n      /* INTERNAL_ERROR */\n      );\n\n      return this.underlyingResolver;\n    }\n  }, {\n    key: \"selectUnderlyingResolver\",\n    value: function () {\n      var _selectUnderlyingResolver = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var isCordova;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.underlyingResolver) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return _isCordova();\n\n              case 4:\n                isCordova = _context4.sent;\n                this.underlyingResolver = isCordova ? this.cordovaResolver : this.browserResolver;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function selectUnderlyingResolver() {\n        return _selectUnderlyingResolver.apply(this, arguments);\n      }\n\n      return selectUnderlyingResolver;\n    }()\n  }]);\n\n  return CompatPopupRedirectResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction unwrap(object) {\n  return object.unwrap();\n}\n\nfunction wrapped(object) {\n  return object.wrapped();\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction credentialFromResponse(userCredential) {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth, e) {\n  var _a; // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n\n\n  var response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\n\n  if (e.code === 'auth/multi-factor-auth-required') {\n    var mfaErr = e;\n    mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\n  } else if (response) {\n    var credential = credentialFromObject(e);\n    var credErr = e;\n\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(object) {\n  var _ref = object instanceof FirebaseError ? object.customData : object,\n      _tokenResponse = _ref._tokenResponse;\n\n  if (!_tokenResponse) {\n    return null;\n  } // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n\n\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  var providerId = _tokenResponse.providerId; // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  var provider;\n\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n\n    default:\n      var oauthIdToken = _tokenResponse.oauthIdToken,\n          oauthAccessToken = _tokenResponse.oauthAccessToken,\n          oauthTokenSecret = _tokenResponse.oauthTokenSecret,\n          pendingToken = _tokenResponse.pendingToken,\n          nonce = _tokenResponse.nonce;\n\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      } // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n\n\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId: providerId,\n            signInMethod: providerId,\n            pendingToken: pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);\n}\n\nfunction convertCredential(auth, credentialPromise) {\n  return credentialPromise.catch(function (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n\n    throw e;\n  }).then(function (credential) {\n    var operationType = credential.operationType;\n    var user = credential.user;\n    return {\n      operationType: operationType,\n      credential: credentialFromResponse(credential),\n      additionalUserInfo: exp.getAdditionalUserInfo(credential),\n      user: User.getOrCreate(user)\n    };\n  });\n}\n\nfunction convertConfirmationResult(_x11, _x12) {\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nfunction _convertConfirmationResult() {\n  _convertConfirmationResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(auth, confirmationResultPromise) {\n    var confirmationResultExp;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return confirmationResultPromise;\n\n          case 2:\n            confirmationResultExp = _context19.sent;\n            return _context19.abrupt(\"return\", {\n              verificationId: confirmationResultExp.verificationId,\n              confirm: function confirm(verificationCode) {\n                return convertCredential(auth, confirmationResultExp.confirm(verificationCode));\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nvar MultiFactorResolver = /*#__PURE__*/function () {\n  function MultiFactorResolver(auth, resolver) {\n    _classCallCheck(this, MultiFactorResolver);\n\n    this.resolver = resolver;\n    this.auth = wrapped(auth);\n  }\n\n  _createClass(MultiFactorResolver, [{\n    key: \"session\",\n    get: function get() {\n      return this.resolver.session;\n    }\n  }, {\n    key: \"hints\",\n    get: function get() {\n      return this.resolver.hints;\n    }\n  }, {\n    key: \"resolveSignIn\",\n    value: function resolveSignIn(assertion) {\n      return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\n    }\n  }]);\n\n  return MultiFactorResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar User = /*#__PURE__*/function () {\n  function User(_delegate) {\n    _classCallCheck(this, User);\n\n    this._delegate = _delegate;\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  _createClass(User, [{\n    key: \"delete\",\n    value: function _delete() {\n      return this._delegate.delete();\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this._delegate.reload();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._delegate.toJSON();\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult(forceRefresh) {\n      return this._delegate.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken(forceRefresh) {\n      return this._delegate.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"linkAndRetrieveDataWithCredential\",\n    value: function linkAndRetrieveDataWithCredential(credential) {\n      return this.linkWithCredential(credential);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function () {\n      var _linkWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(credential) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential)));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function linkWithCredential(_x13) {\n        return _linkWithCredential.apply(this, arguments);\n      }\n\n      return linkWithCredential;\n    }()\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function () {\n      var _linkWithPhoneNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(phoneNumber, applicationVerifier) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function linkWithPhoneNumber(_x14, _x15) {\n        return _linkWithPhoneNumber.apply(this, arguments);\n      }\n\n      return linkWithPhoneNumber;\n    }()\n  }, {\n    key: \"linkWithPopup\",\n    value: function () {\n      var _linkWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function linkWithPopup(_x16) {\n        return _linkWithPopup.apply(this, arguments);\n      }\n\n      return linkWithPopup;\n    }()\n  }, {\n    key: \"linkWithRedirect\",\n    value: function () {\n      var _linkWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(provider) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return _savePersistenceForRedirect(exp._castAuth(this.auth));\n\n              case 2:\n                return _context8.abrupt(\"return\", exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function linkWithRedirect(_x17) {\n        return _linkWithRedirect.apply(this, arguments);\n      }\n\n      return linkWithRedirect;\n    }()\n  }, {\n    key: \"reauthenticateAndRetrieveDataWithCredential\",\n    value: function reauthenticateAndRetrieveDataWithCredential(credential) {\n      return this.reauthenticateWithCredential(credential);\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function () {\n      var _reauthenticateWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(credential) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential)));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function reauthenticateWithCredential(_x18) {\n        return _reauthenticateWithCredential.apply(this, arguments);\n      }\n\n      return reauthenticateWithCredential;\n    }()\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup(provider) {\n      return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function () {\n      var _reauthenticateWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(provider) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _savePersistenceForRedirect(exp._castAuth(this.auth));\n\n              case 2:\n                return _context10.abrupt(\"return\", exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function reauthenticateWithRedirect(_x19) {\n        return _reauthenticateWithRedirect.apply(this, arguments);\n      }\n\n      return reauthenticateWithRedirect;\n    }()\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n    }\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(providerId) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return exp.unlink(this._delegate, providerId);\n\n              case 2:\n                return _context11.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function unlink(_x20) {\n        return _unlink.apply(this, arguments);\n      }\n\n      return unlink;\n    }()\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(newEmail) {\n      return exp.updateEmail(this._delegate, newEmail);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(newPassword) {\n      return exp.updatePassword(this._delegate, newPassword);\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(phoneCredential) {\n      return exp.updatePhoneNumber(this._delegate, phoneCredential);\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(profile) {\n      return exp.updateProfile(this._delegate, profile);\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._delegate.emailVerified;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._delegate.isAnonymous;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._delegate.metadata;\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._delegate.phoneNumber;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._delegate.providerData;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._delegate.refreshToken;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._delegate.displayName;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._delegate.email;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._delegate.photoURL;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._delegate.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._delegate.uid;\n    }\n  }, {\n    key: \"auth\",\n    get: function get() {\n      return this._delegate.auth;\n    }\n  }], [{\n    key: \"getOrCreate\",\n    value: function getOrCreate(user) {\n      if (!User.USER_MAP.has(user)) {\n        User.USER_MAP.set(user, new User(user));\n      }\n\n      return User.USER_MAP.get(user);\n    }\n  }]);\n\n  return User;\n}(); // Maintain a map so that there's always a 1:1 mapping between new User and\n// legacy compat users\n\n\nUser.USER_MAP = new WeakMap();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _assert$1 = exp._assert;\n\nvar Auth = /*#__PURE__*/function () {\n  function Auth(app, provider) {\n    _classCallCheck(this, Auth);\n\n    this.app = app;\n\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate();\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    var apiKey = app.options.apiKey; // TODO: platform needs to be determined using heuristics\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // TODO: platform needs to be determined using heuristics\n\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // Only use a popup/redirect resolver in browser environments\n\n\n    var resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    });\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n\n    this.linkUnderlyingAuth();\n  }\n\n  _createClass(Auth, [{\n    key: \"emulatorConfig\",\n    get: function get() {\n      return this._delegate.emulatorConfig;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      if (!this._delegate.currentUser) {\n        return null;\n      }\n\n      return User.getOrCreate(this._delegate.currentUser);\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._delegate.languageCode;\n    },\n    set: function set(languageCode) {\n      this._delegate.languageCode = languageCode;\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._delegate.settings;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    },\n    set: function set(tid) {\n      this._delegate.tenantId = tid;\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      this._delegate.useDeviceLanguage();\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      return this._delegate.signOut();\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(url, options) {\n      exp.connectAuthEmulator(this._delegate, url, options);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      return exp.applyActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return exp.checkActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return exp.confirmPasswordReset(this._delegate, code, newPassword);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function () {\n      var _createUserWithEmailAndPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(email, password) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password)));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function createUserWithEmailAndPassword(_x21, _x22) {\n        return _createUserWithEmailAndPassword.apply(this, arguments);\n      }\n\n      return createUserWithEmailAndPassword;\n    }()\n  }, {\n    key: \"fetchProvidersForEmail\",\n    value: function fetchProvidersForEmail(email) {\n      return this.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return exp.fetchSignInMethodsForEmail(this._delegate, email);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return exp.isSignInWithEmailLink(this._delegate, emailLink);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function () {\n      var _getRedirectResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var credential;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                _context13.next = 3;\n                return exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\n\n              case 3:\n                credential = _context13.sent;\n\n                if (credential) {\n                  _context13.next = 6;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", {\n                  credential: null,\n                  user: null\n                });\n\n              case 6:\n                return _context13.abrupt(\"return\", convertCredential(this._delegate, Promise.resolve(credential)));\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getRedirectResult() {\n        return _getRedirectResult.apply(this, arguments);\n      }\n\n      return getRedirectResult;\n    }() // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n    // out of autogenerated documentation pages to reduce accidental misuse.\n\n  }, {\n    key: \"addFrameworkForLogging\",\n    value: function addFrameworkForLogging(framework) {\n      exp.addFrameworkForLogging(this._delegate, framework);\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers = wrapObservers(nextOrObserver, errorFn, completed),\n          next = _wrapObservers.next,\n          error = _wrapObservers.error,\n          complete = _wrapObservers.complete;\n\n      return this._delegate.onAuthStateChanged(next, error, complete);\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers2 = wrapObservers(nextOrObserver, errorFn, completed),\n          next = _wrapObservers2.next,\n          error = _wrapObservers2.error,\n          complete = _wrapObservers2.complete;\n\n      return this._delegate.onIdTokenChanged(next, error, complete);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email, actionCodeSettings) {\n      return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email, actionCodeSettings) {\n      return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function () {\n      var _setPersistence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(persistence) {\n        var converted, isIndexedDBFullySupported;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _validatePersistenceArgument(this._delegate, persistence);\n\n                _context14.t0 = persistence;\n                _context14.next = _context14.t0 === Persistence.SESSION ? 4 : _context14.t0 === Persistence.LOCAL ? 6 : _context14.t0 === Persistence.NONE ? 11 : 13;\n                break;\n\n              case 4:\n                converted = exp.browserSessionPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 6:\n                _context14.next = 8;\n                return exp._getInstance(exp.indexedDBLocalPersistence)._isAvailable();\n\n              case 8:\n                isIndexedDBFullySupported = _context14.sent;\n                converted = isIndexedDBFullySupported ? exp.indexedDBLocalPersistence : exp.browserLocalPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 11:\n                converted = exp.inMemoryPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 13:\n                return _context14.abrupt(\"return\", exp._fail(\"argument-error\"\n                /* ARGUMENT_ERROR */\n                , {\n                  appName: this._delegate.name\n                }));\n\n              case 14:\n                return _context14.abrupt(\"return\", this._delegate.setPersistence(converted));\n\n              case 15:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function setPersistence(_x23) {\n        return _setPersistence.apply(this, arguments);\n      }\n\n      return setPersistence;\n    }()\n  }, {\n    key: \"signInAndRetrieveDataWithCredential\",\n    value: function signInAndRetrieveDataWithCredential(credential) {\n      return this.signInWithCredential(credential);\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(token) {\n      return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function () {\n      var _signInWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(provider) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                return _context15.abrupt(\"return\", convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function signInWithPopup(_x24) {\n        return _signInWithPopup.apply(this, arguments);\n      }\n\n      return signInWithPopup;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(provider) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                _context16.next = 3;\n                return _savePersistenceForRedirect(this._delegate);\n\n              case 3:\n                return _context16.abrupt(\"return\", exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function signInWithRedirect(_x25) {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"updateCurrentUser\",\n    value: function updateCurrentUser(user) {\n      // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n      // @ts-ignore\n      return this._delegate.updateCurrentUser(user);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return exp.verifyPasswordResetCode(this._delegate, code);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._delegate._delete();\n    }\n  }, {\n    key: \"linkUnderlyingAuth\",\n    value: function linkUnderlyingAuth() {\n      var _this = this;\n\n      this._delegate.wrapped = function () {\n        return _this;\n      };\n    }\n  }]);\n\n  return Auth;\n}();\n\nAuth.Persistence = Persistence;\n\nfunction wrapObservers(nextOrObserver, error, complete) {\n  var next = nextOrObserver;\n\n  if (typeof nextOrObserver !== 'function') {\n    next = nextOrObserver.next;\n    error = nextOrObserver.error;\n    complete = nextOrObserver.complete;\n  } // We know 'next' is now a function\n\n\n  var oldNext = next;\n\n  var newNext = function newNext(user) {\n    return oldNext(user && User.getOrCreate(user));\n  };\n\n  return {\n    next: newNext,\n    error: error,\n    complete: complete\n  };\n}\n\nfunction buildPersistenceHierarchy(apiKey, appName) {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  var persistences = _getPersistencesFromRedirect(apiKey, appName); // If \"self\" is available, add indexedDB\n\n\n  if (typeof self !== 'undefined' && !persistences.includes(exp.indexedDBLocalPersistence)) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  } // If \"window\" is available, add HTML Storage persistences\n\n\n  if (typeof window !== 'undefined') {\n    for (var _i = 0, _arr = [exp.browserLocalPersistence, exp.browserSessionPersistence]; _i < _arr.length; _i++) {\n      var persistence = _arr[_i];\n\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  } // Add in-memory as a final fallback\n\n\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PhoneAuthProvider = /*#__PURE__*/function () {\n  function PhoneAuthProvider() {\n    _classCallCheck(this, PhoneAuthProvider);\n\n    this.providerId = 'phone'; // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\n  }\n\n  _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\n      return this._delegate.verifyPhoneNumber( // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions, applicationVerifier);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }], [{\n    key: \"credential\",\n    value: function credential(verificationId, verificationCode) {\n      return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n    }\n  }]);\n\n  return PhoneAuthProvider;\n}();\n\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _assert = exp._assert;\n\nvar RecaptchaVerifier = /*#__PURE__*/function () {\n  function RecaptchaVerifier(container, parameters) {\n    var app = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firebase.app();\n\n    _classCallCheck(this, RecaptchaVerifier);\n\n    var _a; // API key is required for web client RPC calls.\n\n\n    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    });\n\n    this._delegate = new exp.RecaptchaVerifier(container, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parameters, // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    app.auth());\n    this.type = this._delegate.type;\n  }\n\n  _createClass(RecaptchaVerifier, [{\n    key: \"clear\",\n    value: function clear() {\n      this._delegate.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._delegate.render();\n    }\n  }, {\n    key: \"verify\",\n    value: function verify() {\n      return this._delegate.verify();\n    }\n  }]);\n\n  return RecaptchaVerifier;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AUTH_TYPE = 'auth-compat'; // Create auth components to register with firebase.\n// Provides Auth public APIs.\n\nfunction registerAuthCompat(instance) {\n  instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app-compat').getImmediate();\n    var authProvider = container.getProvider('auth');\n    return new Auth(app, authProvider);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps({\n    ActionCodeInfo: {\n      Operation: {\n        EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\n        PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\n        RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\n        REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n        VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n        VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\n      }\n    },\n    EmailAuthProvider: exp.EmailAuthProvider,\n    FacebookAuthProvider: exp.FacebookAuthProvider,\n    GithubAuthProvider: exp.GithubAuthProvider,\n    GoogleAuthProvider: exp.GoogleAuthProvider,\n    OAuthProvider: exp.OAuthProvider,\n    SAMLAuthProvider: exp.SAMLAuthProvider,\n    PhoneAuthProvider: PhoneAuthProvider,\n    PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\n    RecaptchaVerifier: RecaptchaVerifier,\n    TwitterAuthProvider: exp.TwitterAuthProvider,\n    Auth: Auth,\n    AuthCredential: exp.AuthCredential,\n    Error: FirebaseError\n  }).setInstantiationMode(\"LAZY\"\n  /* LAZY */\n  ).setMultipleInstances(false));\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase);","map":{"version":3,"mappings":"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","names":["CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","location","_a","protocol","_isHttpOrHttps","ua","getUA","toLowerCase","match","_isNativeEnvironment","isReactNative","isNode","_isIe11","isIE","documentMode","_isEdge","test","_isLocalStorageNotSynchronized","_isWebStorageSupported","storage","self","localStorage","key","impl","_generateEventId","isIndexedDBAvailable","e","_isWorker","global","_isPopupRedirectSupported","isBrowserExtension","_isAndroidOrIosCordovaScheme","_isLikelyCordova","document","_isCordova","Promise","timeoutId","setTimeout","resolve","addEventListener","clearTimeout","_getSelfWindow","window","Persistence","LOCAL","NONE","SESSION","_assert","exp","PERSISTENCE_KEY","auth","persistence","Object","values","includes","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","_persistenceKeyName","config","apiKey","name","setItem","_getPersistence","appName","getItem","inMemoryPersistence","indexedDBLocalPersistence","browserSessionPersistence","sessionStorage","CompatPopupRedirectResolver","browserResolver","_getInstance","browserPopupRedirectResolver","cordovaResolver","cordovaPopupRedirectResolver","underlyingResolver","_getRedirectResult","_overrideRedirectResult","selectUnderlyingResolver","assertedUnderlyingResolver","_initialize","provider","authType","eventId","_openPopup","_openRedirect","cb","_isIframeWebStorageSupported","_originValidation","_shouldInitProactively","isCordova","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","response","customData","_tokenResponse","code","mfaErr","resolver","MultiFactorResolver","getMultiFactorResolver","credential","credErr","tenantId","undefined","email","phoneNumber","FirebaseError","PhoneAuthProvider","credentialFromResult","providerId","ProviderId","PASSWORD","GOOGLE","GoogleAuthProvider","FACEBOOK","FacebookAuthProvider","GITHUB","GithubAuthProvider","TWITTER","TwitterAuthProvider","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","startsWith","SAMLAuthCredential","_create","OAuthCredential","_fromParams","signInMethod","idToken","accessToken","OAuthProvider","rawNonce","credentialFromError","credentialPromise","catch","then","operationType","user","additionalUserInfo","getAdditionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","convertCredential","hints","assertion","resolveSignIn","_delegate","multiFactor","delete","reload","toJSON","forceRefresh","getIdTokenResult","getIdToken","linkWithCredential","applicationVerifier","linkWithPhoneNumber","linkWithPopup","_castAuth","linkWithRedirect","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","reauthenticateWithRedirect","actionCodeSettings","sendEmailVerification","unlink","newEmail","updateEmail","newPassword","updatePassword","phoneCredential","updatePhoneNumber","profile","updateProfile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","displayName","photoURL","uid","USER_MAP","has","set","get","WeakMap","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","initialize","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","debugErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","url","connectAuthEmulator","applyActionCode","checkActionCode","confirmPasswordReset","password","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","emailLink","isSignInWithEmailLink","getRedirectResult","framework","addFrameworkForLogging","nextOrObserver","errorFn","completed","wrapObservers","next","error","complete","onAuthStateChanged","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","_validatePersistenceArgument","converted","_isAvailable","isIndexedDBFullySupported","browserLocalPersistence","_fail","setPersistence","signInWithCredential","signInAnonymously","token","signInWithCustomToken","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","signInWithRedirect","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","newNext","persistences","_getPersistencesFromRedirect","push","firebase","phoneInfoOptions","verifyPhoneNumber","PHONE_SIGN_IN_METHOD","PROVIDER_ID","RecaptchaVerifier","container","parameters","type","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","INTERNAL","registerComponent","Component","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","ActionCodeOperation","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","SAMLAuthProvider","CompatAuthProvider","PhoneMultiFactorGenerator","CompatRecaptchaVerifier","AuthCredential","Error","setInstantiationMode","setMultipleInstances","registerVersion","version"],"sources":["/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/platform.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/persistence.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/popup_redirect.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/wrap.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/user_credential.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/user.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/auth.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/phone_auth_provider.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/src/recaptcha_verifier.ts","/home/fullzer4/Documents/GitHub/ToDoList/node_modules/@firebase/auth-compat/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' ||\n      _getCurrentScheme() === 'ionic:' ||\n      _getCurrentScheme() === 'capacitor:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n\nexport function _getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _getSelfWindow, _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n  const session = getSessionStorageIfAvailable();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (session) {\n    session.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable(): Storage | null {\n  try {\n    return _getSelfWindow()?.sessionStorage || null;\n  } catch (e) {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n  _overrideRedirectResult = exp._overrideRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = (e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown as Record<string, string>;\n  if (e.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (\n    object instanceof FirebaseError ? object.customData : object\n  ) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  return credentialPromise\n    .catch(e => {\n      if (e instanceof FirebaseError) {\n        attachExtraErrorFields(auth, e);\n      }\n      throw e;\n    })\n    .then(credential => {\n      const operationType = credential.operationType;\n      const user = credential.user;\n\n      return {\n        operationType,\n        credential: credentialFromResponse(\n          credential as exp.UserCredentialInternal\n        ),\n        additionalUserInfo: exp.getAdditionalUserInfo(\n          credential as exp.UserCredential\n        ),\n        user: User.getOrCreate(user)\n      };\n    });\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth as unknown as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return (this._delegate as exp.UserImpl).auth as unknown as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName);\n\n  // If \"self\" is available, add indexedDB\n  if (\n    typeof self !== 'undefined' &&\n    !persistences.includes(exp.indexedDBLocalPersistence)\n  ) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (const persistence of [\n      exp.browserLocalPersistence,\n      exp.browserSessionPersistence\n    ]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier>\n{\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        SAMLAuthProvider: impl.SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n"]},"metadata":{},"sourceType":"module"}